<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://xiqin-huang.github.io</id>
    <title>西芹的小站 • Posts by &#34;书籍&#34; tag</title>
    <link href="https://xiqin-huang.github.io" />
    <updated>2023-10-12T10:49:32.986Z</updated>
    <category term="java" />
    <category term="书籍" />
    <category term="java基础" />
    <category term="java学习路线" />
    <category term="Excel" />
    <category term="office" />
    <category term="日常办公" />
    <category term="散文" />
    <category term="游记" />
    <category term="历史政治" />
    <category term="科幻" />
    <category term="小说" />
    <category term="Premiere" />
    <category term="视频剪辑" />
    <category term="人物传记" />
    <category term="名言警句" />
    <category term="阅读" />
    <category term="余华" />
    <category term="心理学" />
    <category term="历史" />
    <category term="政治" />
    <category term="明朝" />
    <category term="杂文" />
    <category term="人生感悟" />
    <category term="科技人文" />
    <category term="经济学" />
    <category term="中国" />
    <category term="科技" />
    <category term="人际交往" />
    <category term="心理" />
    <category term="电影" />
    <category term="动漫" />
    <category term="短剧" />
    <category term="电视剧" />
    <category term="电子书" />
    <category term="跨考" />
    <category term="考研" />
    <category term="计算机" />
    <category term="月报" />
    <category term="计算机基础" />
    <category term="云开发" />
    <category term="微信小程序" />
    <category term="数据库" />
    <category term="MySQL" />
    <category term="鲁迅" />
    <category term="算法" />
    <category term="Python" />
    <category term="编程" />
    <entry>
        <id>https://xiqin-huang.github.io/2023/10/12/shu-ji/zai-xi-yu-zhong-hu-han-yu-hua-95/</id>
        <title>在细雨中呼喊_余华_95</title>
        <link rel="alternate" href="https://xiqin-huang.github.io/2023/10/12/shu-ji/zai-xi-yu-zhong-hu-han-yu-hua-95/"/>
        <content type="html">&lt;h1 id=&#34;摘要&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#摘要&#34;&gt;#&lt;/a&gt; 摘要&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;记忆超越了尘世的恩怨之后，独自来到了。&lt;/li&gt;
&lt;li&gt;王跃进：“你们看，她多下流。”，冯玉青父亲：“我女儿都让你睡过啦。”，冯玉青不再关心正在进行着的婚礼，她开始为自己的命运迷惑不解。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;我们并不是生活在土地上，事实上我们生活在时间里。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;时间将我们推移向前或向后，并且改变着我们的模样。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;他一旦脱离时间便固定下来，我们则在时间的推移下继续前行。&lt;/li&gt;
&lt;li&gt;生者将死者埋葬以后，死者便永远躺在那里。&lt;/li&gt;
&lt;li&gt;活着的人是无法看清太阳的，只有临死之人的眼睛才能穿越光芒看清太阳。&lt;/li&gt;
&lt;li&gt;母亲忍受了长时间的屈辱之后，终于爆发，所得到的依旧是屈辱。&lt;/li&gt;
&lt;li&gt;我看到了哥哥的眼睛里流露出来的空虚与悲哀。孙光平触景生情地想到了自己命运的最后那部分。&lt;/li&gt;
&lt;li&gt;浑浊的眼睛使我父亲的脸想一只蝴蝶一样花里胡哨，青黄的鼻涕挂在嘴层，不停的抖动。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;我不再装模作样的拥有很多朋友，而是回到孤单之中，以真正的我开始独自的生活。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;有时我也会因为寂寞而难以忍受空虚的折磨，但我宁愿以这样的方式来维护自己的自尊，也不愿以耻辱为代价去换取那种表面的朋友。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;我那时候的年龄，已经无法让所有的一切都按照被认为正确的准则行事，内心的欲望开始静悄悄地主持了我一部分言行。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;黑夜的宁静总是给予我宽容和安慰。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;我的生命在白昼和黑夜展开了两个部分。&lt;/li&gt;
&lt;li&gt;她的声音向我展示了她正陶醉于滔滔不绝之中。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;正是那一刻，生活第一次向我展示了和想象完全不一样的容貌。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;当我们恶狠狠地对待这个世界时，这个世界突然变得温文尔雅了。&lt;/li&gt;
&lt;li&gt;那时候我已离开家乡，命运终于向我流露出令我感激的微笑。&lt;/li&gt;
&lt;li&gt;祖父：“老天爷，你下屌吧，操死我吧。”&lt;/li&gt;
&lt;li&gt;生命在面对消亡时，展现了对往昔的无限依恋。&lt;/li&gt;
&lt;li&gt;我忽然明白了逃跑的意义，它使惩罚变得遥远，同时又延伸了快乐。&lt;/li&gt;
&lt;li&gt;我们争论的是科学，他却给了我们政治的回答。&lt;/li&gt;
&lt;li&gt;我用恶的方式，得到的却是一种美好。&lt;/li&gt;
&lt;li&gt;除了生命本身，我再也找不出活下去的理由了。&lt;/li&gt;
&lt;li&gt;先是一种空荡荡的感觉，里面如同深夜的胡同一样寂寞，有着风吹来吹去似的虚无。&lt;/li&gt;
&lt;li&gt;我看到翻滚的乌云和通红的晚霞正逐渐融为一体，一轮红日已经贴在远处的地平线上，开始了它光芒四射的下沉。&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;读后感&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#读后感&#34;&gt;#&lt;/a&gt; 读后感&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;余华：“时间将我推移向前或向后，并且改变着我们的模样。”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;本书的顺序是打乱的，以主角孙光林一人为视角，讲述了两个家庭的故事，淘气的弟弟孙光明救人被淹死，哥哥孙光平和父亲孙广才却想利用这个机会进北京，这个注定失败的计划让爷俩恼羞成怒，导致进了监狱；出狱的父亲扬言报复，却走进了寡妇的家中。好强的哥哥逐渐褪去了自己的光芒，慢慢地明白了自己的无能和家庭的破败，唯一的希望 —— 一个好女孩愿意和他在一起 —— 也被父亲破坏了。可恨的父亲还强暴了他的妻子，天天讲家中的东西送给寡妇。他终于忍无可忍了，挥刀讲父亲的耳朵割掉。最终进了监狱两年。好色的苏杭试图强暴一名七十岁的老奶奶；坚强的王立强出轨身败名裂，用一颗手榴弹炸死了告密者，用另一颗毁掉了自己。冯玉清褪去自己的美丽，变成了一个妓女，却有一个好儿子不离不弃。勇敢的国庆失去了自己的父亲，却不放弃，自己生活，却因为过度的早熟而导致了一系列的悲剧。聪明的苏宇指导了我的成长，却还是逃不掉别人的无端指责。最后是大流氓 —— 孙广才，这个亲手毁掉自己儿子未来的人。&lt;/p&gt;
&lt;p&gt;时间真是一个奇妙的东西，它把人们变得面目全非。在那个混乱年代，人们也许也只能以这种方式，被别人随手毁掉自己的未来，最后不得不面对自己的破碎人生。也许下一代总会嫌弃自己的上一代，上一代人培养下一代人去反抗他们，这有点 2 西方神话中的 “弑父情结”。孙广才是个不折不扣的坏蛋，他给这个家庭带来的只有屈辱，贫穷和暴力，他亲手毁掉了自己儿子的未来。希望下一代不要再犯下上一代的错误了。&lt;/p&gt;
</content>
        <category term="书籍" />
        <category term="阅读" />
        <category term="余华" />
        <updated>2023-10-12T10:49:32.986Z</updated>
    </entry>
    <entry>
        <id>https://xiqin-huang.github.io/2023/10/12/dian-zi-shu/ma-nong-fan-shen/</id>
        <title>码农翻身-刘欣</title>
        <link rel="alternate" href="https://xiqin-huang.github.io/2023/10/12/dian-zi-shu/ma-nong-fan-shen/"/>
        <content type="html">&lt;ol&gt;
&lt;li&gt;最好的办法是：把日志、安全、事务、性能统计这样的非功能性代码和业务逻辑完全隔离开来！因为它们关注点和业务代码完全不同，它们之间应该是正交的。&lt;/li&gt;
&lt;li&gt;CAS 本质上就是一个认证中心的 cookie，加上多个子系统的 cookie 而已。&lt;/li&gt;
&lt;li&gt;计算机行业的所有问题都可以通过增加一个抽象层来解决，我看我们就在应用程序和数据库之间增加一个抽象层 —— 缓存。&lt;/li&gt;
&lt;li&gt;框架是一个半成品，是无法独立运行的，必须由开发人员按照它定义的规则，把项目的代码放置到指定的位置，由框架整合起来，这才是一个完整的应用程序。&lt;/li&gt;
&lt;li&gt;大部分人只会抱怨项目很无趣、没有挑战，遇到问题也只会安于现状。只有少数人会发现工作中的 “痛点”，并且真正动手解决它，给公司带来价值。这是提高自己，让自己和别人区分开来的重要方法。&lt;/li&gt;
&lt;li&gt;只要遵循路径的约定，大家就不用费心费力地指定各种路径了，一切由工具自动完成。这样一来，Build 脚本就可以极大地简化，只需寥寥数行。&lt;/li&gt;
&lt;li&gt;这就是程序员辛苦的地方：需要把复杂，容易产生歧义的人类语言翻译成精确的计算机语言指令。&lt;/li&gt;
&lt;li&gt;对于性格内向的程序员，很多时候你认为基本准备好了其实就够了，凡事必先骑上虎背，勇敢地迈出去，努力地争取一下，你就会发现自己登上了更高一层的台阶。&lt;/li&gt;
&lt;li&gt;指令集是对 CPU 的抽象，文件是对输入 / 输出设备的抽象，虚拟存储器是对程序存储的抽象，进程是对一个正在运行的程序的抽象，而虚拟机是对整个计算机 (包括操作系统，处理器和程序) 的抽象。&lt;/li&gt;
&lt;li&gt;停下来，思考，才是进步的本质。&lt;/li&gt;
&lt;li&gt;写作会逼着你去思考，梳理知识体系，防止自己被碎片化所填满。&lt;/li&gt;
&lt;/ol&gt;
</content>
        <category term="书籍" />
        <category term="电子书" />
        <updated>2023-10-12T10:49:32.961Z</updated>
    </entry>
    <entry>
        <id>https://xiqin-huang.github.io/2023/10/12/java/headfirst-java-kathy-sierra/</id>
        <title>HeadFirst Java-Kathy Sierra-90</title>
        <link rel="alternate" href="https://xiqin-huang.github.io/2023/10/12/java/headfirst-java-kathy-sierra/"/>
        <content type="html">&lt;ol&gt;
&lt;li&gt;当某个对象被 java 虚拟机察觉不会被使用到，该对象就会被标记成可回收的。如果内存开始不足，垃圾收集器就会启动来清理垃圾、回收空间，让空间能够再次被利用。&lt;/li&gt;
&lt;li&gt;任何变量只要加上 public、static 和 final，基本上都会变成全局变量取用的常数。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;事实上没有对象变量这样的东西存在，只要引用到对象的变量，对象引用变量保存的是存取对象的方式。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;数组是个对象，不管里面放的是不是 primitive 主数据类型。&lt;/li&gt;
&lt;li&gt;java 是通过值传递的，也就是通过拷贝传递，方法无法改变调用方所传入的参数。&lt;/li&gt;
&lt;li&gt;在创建一个类之前我们需要写出下面三种东西：伪码、测试码、真实码。&lt;/li&gt;
&lt;li&gt;标准版的扩展都以 javax 作为包名称的开头。&lt;/li&gt;
&lt;li&gt;import 和 C 的 include 并不相同，运用 import 只是帮你省下每个类前面的包名称而已。程序不会英文用来 import 而变大或变慢。&lt;/li&gt;
&lt;li&gt;抽象类的产生源于有些类不应该被初始化，比如动物类应该是什么？&lt;/li&gt;
&lt;li&gt;任何从 &lt;code&gt;ArrayList&amp;lt;Object&amp;gt;&lt;/code&gt;  取出的东西都会被当作 Object 类型的引用而不管它原来是什么。而且编译器是根据引用类型来判断哪些方法可以调用，而不是根据 Object 实际的类型。&lt;/li&gt;
&lt;li&gt;多重继承会产生 “致命方块 &#34; 问题，即两个及以上的直接父类拥有相同的方法，子类不知道应该调用哪个方法。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;接口解决致命方块的方法很简单：把全部方法设为抽象的，如此一来，子类就得实现这个此方法，因此 java 虚拟机在执行期间就不会搞不清楚要用哪一个继承版本。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;在 java 中，程序员会在乎内存中的两个区域：对象的生存空间堆 (heap) 和方法调用及变量的生存空间 (stack)。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;不管对象是否声明或创建，如果局部变量是个对该对象的引用，只有变量本身会放在栈上，对象本身只会存在于堆上。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;实例变量声明在类中方法之外的地方，局部变量声明在方法或方法的参数上。&lt;/li&gt;
&lt;li&gt;构造函数在执行的时候，第一件事是去执行它的父类的构造函数，这会连锁反应到 Object 这个类为止。因为如果我们没有调用 super ()，编译器会帮我们加上 super () 的调用。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;基本数据类型有默认值，而包装类则没有默认值。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;编译器不会注意 RuntimeException 类型的异常，它所关心的是称为检查异常的异常。&lt;/li&gt;
&lt;li&gt;内部类可以使用外部所有的方法和变量，就算是私有的也一样可以使用。&lt;/li&gt;
&lt;li&gt;如果某实例变量不能或不应该被实例化的，因为有些变量要在执行期当场创建才有意义。这个时候需要把它标记为 transient (瞬时) 的，transient 的引用变量会以 null 返回，而不管存储当时它的值是什么。恢复时会被赋值为 null 的对象引用或基本数据类型的默认值。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;一个不可序列化的父类，其子类可以是可序列化的。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;解序列化时新的对象会被配置到堆上，但构造函数不会执行，不然会抹去对象的状态。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;静态变量不会被序列化，因为所有对象都是共享同一份静态变量值。当对象还原时，静态变量会恢复成类中原本的样子，而不是存储时的样子。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;将 FileWriter 链接到 BufferedWriter 可以提升效率，因为 BufferedWriter 可以暂存一堆数据，然后到满的时候再实际写入键盘，这样可以减少对磁盘的操作。&lt;/li&gt;
&lt;li&gt;File 对象代表文件的路径，而不是文件本身。&lt;/li&gt;
&lt;li&gt;对象的状态并非只能用序列化来存储，也可以使用 transient 修饰存储。&lt;/li&gt;
&lt;li&gt;java 的好处就在于大部分的输入 / 输出工作并不在乎链接串流的上游实际是什么。也就是说可以使用 BufferedReader 而不管是来自串流来自文件或 socket。&lt;/li&gt;
&lt;li&gt;调度器在不同的 java 虚拟机上有不同的做法，就算是同一个程序在同一台机器上运行也会有不同的遭遇。&lt;/li&gt;
&lt;li&gt;对泛型来说，extends 这个关键词代表 &#34;是一个…&#34;，且适用于类和接口。&lt;/li&gt;
&lt;li&gt;hashcode 是用来缩小寻找成本的，但最后还是要用 equals () 才能认定是否真的找到了相同的项目。如果两个对象有相同的 hashcode 值，它们不一定是相等的。但若两个对象相等，则 hashcode 值一定要相等。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;数组的类型是运行时检查的，但集合的类型检查只会发生在编译期间。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;JAR 就是 JavaARchive，这种文件是个 pkzip 格式的文件，它能让你的一组类文件包装起来，所以交付时只需一个 JAR 文件。&lt;/li&gt;
&lt;li&gt;JWS (Java Web Start) 程序由两个部分组成：可执行的 JAR 文件和.jnlp 文件。.jhlp 文件是用来描述 JWS 应用程序的 XML 文件，它有 target 指定 JAR 的名称和位置，以及带有 main () 的类名称。&lt;/li&gt;
&lt;/ol&gt;
</content>
        <category term="java" />
        <category term="书籍" />
        <category term="java基础" />
        <category term="java学习路线" />
        <updated>2023-10-12T10:49:32.879Z</updated>
    </entry>
</feed>
