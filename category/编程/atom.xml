<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://xiqin-huang.github.io</id>
    <title>西芹的小站 • Posts by &#34;编程&#34; category</title>
    <link href="https://xiqin-huang.github.io" />
    <updated>2023-10-12T10:49:32.954Z</updated>
    <category term="散文" />
    <category term="科幻" />
    <category term="小说" />
    <category term="历史政治" />
    <category term="人物传记" />
    <category term="名言警句" />
    <category term="书籍" />
    <category term="阅读" />
    <category term="余华" />
    <category term="心理学" />
    <category term="历史" />
    <category term="政治" />
    <category term="明朝" />
    <category term="科技人文" />
    <category term="杂文" />
    <category term="人生感悟" />
    <category term="经济学" />
    <category term="科技" />
    <category term="中国" />
    <category term="心理" />
    <category term="人际交往" />
    <category term="java" />
    <category term="java基础" />
    <category term="java学习路线" />
    <category term="鲁迅" />
    <category term="Excel" />
    <category term="office" />
    <category term="日常办公" />
    <category term="游记" />
    <category term="Premiere" />
    <category term="视频剪辑" />
    <category term="月报" />
    <category term="跨考" />
    <category term="考研" />
    <category term="计算机" />
    <category term="电子书" />
    <category term="计算机基础" />
    <category term="云开发" />
    <category term="微信小程序" />
    <category term="数据库" />
    <category term="MySQL" />
    <category term="算法" />
    <category term="Python" />
    <category term="编程" />
    <entry>
        <id>https://xiqin-huang.github.io/2023/10/12/bian-cheng/shu-ju-ku-xi-tong-gai-shu/shu-ju-ku-xi-tong-gai-shu/</id>
        <title>数据库系统概述-91</title>
        <link rel="alternate" href="https://xiqin-huang.github.io/2023/10/12/bian-cheng/shu-ju-ku-xi-tong-gai-shu/shu-ju-ku-xi-tong-gai-shu/"/>
        <content type="html">&lt;h1 id=&#34;绪论&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#绪论&#34;&gt;#&lt;/a&gt; 绪论&lt;/h1&gt;
&lt;p&gt;数据库的特点之一是数据的共享，严格地讲，这里的数据共享是指多种应用、多种语言、多个用户互相覆盖地使用数据集合。&lt;/p&gt;
&lt;p&gt;数据库 DB、数据库系统 DBS 和数据库管理系统 DBMS 之间的关系是 DBS 包括 DB 和 DBMS。&lt;/p&gt;
&lt;p&gt;在数据管理技术的发展过程中，经历了文件系统、人工管理和数据库系统阶段。&lt;/p&gt;
&lt;h2 id=&#34;数据库系统概述&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#数据库系统概述&#34;&gt;#&lt;/a&gt; 数据库系统概述&lt;/h2&gt;
&lt;h3 id=&#34;四个基本概念&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#四个基本概念&#34;&gt;#&lt;/a&gt; 四个基本概念&lt;/h3&gt;
&lt;h4 id=&#34;数据&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#数据&#34;&gt;#&lt;/a&gt; 数据&lt;/h4&gt;
&lt;p&gt;数据是数据库中存储的基本对象，数据的定义是描述事物的符号记录。&lt;/p&gt;
&lt;p&gt;数据的含义称为数据的含义，数据与其语义是不可分的。&lt;/p&gt;
&lt;p&gt;数据是有结构的：记录是计算机存储数据的一种格式或一种方法。&lt;/p&gt;
&lt;h4 id=&#34;数据库&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#数据库&#34;&gt;#&lt;/a&gt; 数据库&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;数据库 (Database，简称 DB) 是长期存储在计算机内、有组织的、可共享的大量数据的集合。&lt;/strong&gt;&lt;/p&gt;
&lt;h5 id=&#34;数据库的基本特征&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#数据库的基本特征&#34;&gt;#&lt;/a&gt; 数据库的基本特征&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;数据按一定的数据模型组织、描述和存储&lt;/li&gt;
&lt;li&gt;可为各种用户共享、冗余度较小、易扩展&lt;/li&gt;
&lt;li&gt;数据独立性较高&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;数据库管理系统&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#数据库管理系统&#34;&gt;#&lt;/a&gt; 数据库管理系统&lt;/h4&gt;
&lt;p&gt;数据库管理系统 (DBMS) 位于用户应用与操作系统之间的一层数据管理软件，是基础软件，是一个大型复杂的软件系统。&lt;/p&gt;
&lt;h5 id=&#34;主要功能&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#主要功能&#34;&gt;#&lt;/a&gt; 主要功能&lt;/h5&gt;
&lt;ol&gt;
&lt;li&gt;数据定义功能，提供数据定义语言 (DDL) 和定义数据库中的数据对象&lt;/li&gt;
&lt;li&gt;数据组织、存储和管理
&lt;ul&gt;
&lt;li&gt;分类组织、存储和管理各种数据&lt;/li&gt;
&lt;li&gt;确定数据在存储级别上的结构和存取方式&lt;/li&gt;
&lt;li&gt;实现数据之间的联系&lt;/li&gt;
&lt;li&gt;提供多种存取方式提高存取效率&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;数据操纵功能，提供数据操纵语言 (DML)，实现对数据库的基本操作&lt;/li&gt;
&lt;li&gt;数据库的事务管理和运行管理，由数据库管理系统统一管理和控制，保证事务正确运行&lt;/li&gt;
&lt;li&gt;数据库的建立和维护功能，提供实用程序和工具完成数据库数据批量装载，数据库转储，介质故障恢复，数据库的重组织和性能监视等&lt;/li&gt;
&lt;li&gt;其他功能
&lt;ul&gt;
&lt;li&gt;数据库管理系统与网络中其他软件系统的通信&lt;/li&gt;
&lt;li&gt;数据库管理系统之间的数据转换&lt;/li&gt;
&lt;li&gt;异构数据库之间的互访和互操作&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;img src=&#34;https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/11606/1d1c6e6b37a025b0d05c4af995e17427.jpg&#34; alt=&#34;数据库在计算机系统中的位置.jpg&#34; style=&#34;zoom:50%;&#34;&gt;
&lt;h4 id=&#34;数据库系统&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#数据库系统&#34;&gt;#&lt;/a&gt; 数据库系统&lt;/h4&gt;
&lt;p&gt;数据库系统 (DBS) 是指在计算机系统中引入数据库后的系统构成，在不引起混淆的情况下常常把数据库系统简称为数据库。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;数据库系统的构成包括数据库，数据库管理系统及其应用开发工具、应用程序和数据库管理员 (DBA)。&lt;/strong&gt;&lt;/p&gt;
&lt;img src=&#34;https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/11606/4c59c7cbd6fbffe4f187f1d35b6104eb.png&#34; alt=&#34;数据库系统&#34; style=&#34;zoom:50%;&#34;&gt;
&lt;h3 id=&#34;数据库管理技术的产生和发展&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#数据库管理技术的产生和发展&#34;&gt;#&lt;/a&gt; 数据库管理技术的产生和发展&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;数据管理对数据进行分类、组织、编码、存储、检索和维护。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;数据库系统管理相比于文件管理系统的优点是：程序员不需要关注记录的存储和不同表之间的联系，开发速度快。&lt;/p&gt;
&lt;p&gt;数据库的数据独立性高，拥有物理独立性，当数据的物理存储改变不影响应用程序，也拥有逻辑独立性，数据的逻辑结构改变不影响应用程序。&lt;/p&gt;
&lt;h2 id=&#34;数据模型&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#数据模型&#34;&gt;#&lt;/a&gt; 数据模型&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;数据模型是对现实世界数据特征的抽象，通俗来讲数据模型就是对现实世界的模拟，是数据库系统的核心和基础。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;数据模型分为两类：概念模型，也称信息模型，是按用户的观点对数据和信息建模，用于数据库设计；逻辑模型和物理模型，逻辑模型按计算机系统的观点对数据建模，用于 DBMS 实现，物理模型描述在系统内 (磁盘上) 的表示方式和存取方法。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;数据模型由三部分组成：数据结构，用于描述系统的静态特性；数据操作，用于描述系统的动态特性；完整性约束。&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;概念模型&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#概念模型&#34;&gt;#&lt;/a&gt; 概念模型&lt;/h3&gt;
&lt;h4 id=&#34;信息世界中的基本概念&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#信息世界中的基本概念&#34;&gt;#&lt;/a&gt; 信息世界中的基本概念&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;实体 (entity)：客观存在并可相互区别的事物。&lt;/li&gt;
&lt;li&gt;属性 (attribute)：实体所具有的某一特性称为属性，一个实体可以由多个属性来刻画。&lt;/li&gt;
&lt;li&gt;码 (key)：唯一标志实体的属性。&lt;/li&gt;
&lt;li&gt;实体型 (entity type)：用实体名及其属性名集合来抽象和刻画同类实体称为实体型。&lt;/li&gt;
&lt;li&gt;实体集 (entity set)：同一类型实体的集合称为实体集。&lt;/li&gt;
&lt;li&gt;联系 (relationship)：现实世界中事物内部以及事物之间的联系在信息世界中反映为实体内部的联系和实体之间的联系。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;常用的逻辑模型&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#常用的逻辑模型&#34;&gt;#&lt;/a&gt; 常用的逻辑模型&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;层次模型，为格式化模型，使用树形结构来表示各类实体已经实体间的联系。&lt;/li&gt;
&lt;li&gt;网状模型，为格式化模型&lt;/li&gt;
&lt;li&gt;关系模型，目前最常见的模型，&lt;/li&gt;
&lt;li&gt;面向对象数据模型，&lt;/li&gt;
&lt;li&gt;对象关系数据模型&lt;/li&gt;
&lt;li&gt;半结构化数据模型，如 XML&lt;/li&gt;
&lt;li&gt;非结构化数据模型，图模型&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;数据库系统的结构&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#数据库系统的结构&#34;&gt;#&lt;/a&gt; 数据库系统的结构&lt;/h2&gt;
&lt;p&gt;从数据库应用开发人员角度看，数据库系统采用三级模式结构，是数据库系统内部的系统结构。&lt;/p&gt;
&lt;p&gt;从数据库最终用户角度看有：单用户结构、主从式结构、分布式结构、客户 - 服务器、浏览器 - 应用服务器 / 数据库服务器。&lt;/p&gt;
&lt;h3 id=&#34;三级模式结构&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#三级模式结构&#34;&gt;#&lt;/a&gt; 三级模式结构&lt;/h3&gt;
&lt;p&gt;数据库系统模式分为外模式，模式 (逻辑模式) 和内模式。&lt;/p&gt;
&lt;p&gt;逻辑模式是数据库系统模式的中心，与数据的物理存储细节和硬件环境无关，与具体的应用程序、开发工具及高级程序设计语言无关。&lt;/p&gt;
&lt;p&gt;外模式，也称子模式或用户模式，是数据库用户使用的局部数据的逻辑结构和特征的描述，通常是逻辑模式的子集，一个模式可以有多个外模式，反映了不同的用户的应用需求、看待数据的方式、对数据保密的要求。&lt;/p&gt;
&lt;p&gt;内模式，也称存储模式，是数据物理结构和存储方式的描述，一个数据库一般只有一个内模式。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;通过二级映像可以保证数据的物理独立性和逻辑独立性。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/11606/f07dad2a314607f6018151359fa25d93.png&#34; alt=&#34;数据库三级模式.png&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;关系数据库&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#关系数据库&#34;&gt;#&lt;/a&gt; 关系数据库&lt;/h1&gt;
&lt;p&gt;基数的大小等于各个域的大小相乘。&lt;/p&gt;
&lt;p&gt;分量必须取原子值。&lt;/p&gt;
&lt;p&gt;关系模式是型，关系是值，关系模型是对关系法描述。&lt;/p&gt;
&lt;p&gt;关系的三类完整性约束：实体完整性，参照完整性，用户定义的完整性。前两者是关系模型必须满足的完整性约束条件，称为关系的两个不变性，应由关系系统自动支持。&lt;/p&gt;
&lt;p&gt;实体完整性是指关系的主属性不能取空值。&lt;/p&gt;
&lt;p&gt;参照完整性是指外码一定要是存在的值。比如学生所选课程号是外码，该课程一定要实际存在。此时学生关系是参照关系，课程关系是被参照关系或目标关系。&lt;/p&gt;
&lt;p&gt;‍关系代数中的连接操作是由选择和笛卡尔积操作组合而成。&lt;/p&gt;
&lt;p&gt;关系数据模型的基本数据结构是关系，而不是关系模式。&lt;/p&gt;
&lt;p&gt;在参照完整性规则中，参照关系 R 中的外码与被参照关系 S 中的主码可以不同名，但应取自同一值域。&lt;/p&gt;
&lt;h3 id=&#34;关系代数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#关系代数&#34;&gt;#&lt;/a&gt; 关系代数&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;关系代数是一种抽象的查询语言，它使用对关系的运算来表达查询。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;选择运算是从关系 R 中选取使逻辑表达式 F 为真的元祖，是从行的角度进行的运算。&lt;/p&gt;
&lt;p&gt;投影操作是从 R 中选择出若干属性列组成新的关系，主要是从列的角度进行运算，投影之后不仅取消了原关系中的某些列，而且还可能取消某些元组 (避免重复行)。&lt;/p&gt;
&lt;p&gt;连接是从两个关系的笛卡尔积中选取属性间满足一定条件的元组。&lt;/p&gt;
&lt;p&gt;两个关系 R 和 S 再做自然连接时，关系 R 中某些元组有可能在 S 中不存在公共属性上值相等的元组，这些被舍弃的元组被称为悬浮元组。可以通过外连接保留左边或者右边的悬浮元组，其他属性上填空值。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;除法首先找出 R 和 S 关系中相同的属性，即 Y 属性。被除关系 R 中与 S 中不相同的属性是 X，做取消重复值的投影。然后求关系 R 中 X 属性对应的象集 Y。最后判断包含关系，判断关系 R 中 X 各个值的象集是否包含关系 S 中属性 Y 的所有值，如果包含则为所求。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/t_1007/article/details/53036082&#34;&gt;除运算应用实例&lt;/a&gt;&lt;/p&gt;
&lt;img src=&#34;https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/11606/f71e0b776d2f094e3aa8450af51872ad.png&#34; alt=&#34;关系代数&#34; style=&#34;zoom:50%;&#34;&gt;
&lt;h3 id=&#34;关系演算&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#关系演算&#34;&gt;#&lt;/a&gt; 关系演算&lt;/h3&gt;
&lt;p&gt;关系演算是以数理逻辑中的谓语演算为基础，可以按谓词变元不同分为两类：以 ALPHA 语言为代表的以元组变量作为基本对象，和以 QUE 为代表的以域变量作为基本对象。&lt;/p&gt;
&lt;p&gt;ALPHA 语句格式： &lt;code&gt;GET 工作空间名(定额) (表达式1)[:条件][DOWN|UP 表达式2]&lt;/code&gt; 。例如查询选修 2 号课程的学生名字： &lt;code&gt;RANGE sc x GET W(Student.Sname):∃X(X.Sno=Suudent.Sno∧X.Cno=&#39;2&#39;&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;QBE 是基于屏幕表格的查询余姚，以填写表格的方式构造查询，使用示例元素 (域变量) 来表示查询结果可能的情况，查询结果以表格形式显示。分为示例变量，打印操作符 P 和查询条件。&lt;/p&gt;
&lt;h1 id=&#34;关系数据库标准语言sql&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#关系数据库标准语言sql&#34;&gt;#&lt;/a&gt; 关系数据库标准语言 SQL&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;SQL 集数据定义语言 (DDL)，数据操纵语言 (DML)，数据控制语言 (DCL) 功能于一体，可以独立完成数据库生命周期中的全部活动。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;SQL 高度非过程化，存取路径的选择以及 SQL 的操作过程由系统自动完成。&lt;/p&gt;
&lt;p&gt;定义模式实际上定义了一个命名空间，或者说是目录。&lt;/p&gt;
&lt;p&gt;空值是一个很特殊的值，含有不确定性，对关系运算带来特殊的问题，需要做特殊的处理。&lt;/p&gt;
&lt;p&gt;更新视图的限制，一些视图是不可更新的，因为对这些视图的更新不能唯一地有意义地转换成对相应基本表的更新。&lt;/p&gt;
&lt;h1 id=&#34;数据库安全性&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#数据库安全性&#34;&gt;#&lt;/a&gt; 数据库安全性&lt;/h1&gt;
&lt;p&gt;数据库的安全性是指保护数据库以防止不合法使用所造成的数据泄露、更改或破坏。&lt;/p&gt;
&lt;p&gt;数据库的一大特点是数据可以共享，数据共享必然带来数据库的安全性问题。&lt;/p&gt;
&lt;h3 id=&#34;数据库的不安全因素及安全措施&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#数据库的不安全因素及安全措施&#34;&gt;#&lt;/a&gt; 数据库的不安全因素及安全措施&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;非授权用户对数据库的恶意存取和破坏。安全措施主要包括用户身份识别、存取控制和视图等技术。&lt;/li&gt;
&lt;li&gt;数据库中重要或敏感的数据被泄露。安全措施主要由强制存取控制、数据加密存储和加密传输等。&lt;/li&gt;
&lt;li&gt;安全环境的脆弱性。建立一套可信计算机系统的概率和标准。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/11606/d60cdd4a5b0d034082aa8f133c477c18.png&#34; alt=&#34;安全标准&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;数据库安全控制&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#数据库安全控制&#34;&gt;#&lt;/a&gt; 数据库安全控制&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;数据库安全技术有：用户身份鉴别、存取控制、自主存取控制方法、数据库角色、强制存取控制方法。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;自主存取控制 (DAC)：用户对不同的数据对象有不同的存取权限，不同的用户对同一对象也有不同的存取权限，用户还可以将其拥有的存取权限转授给其他用户。&lt;/p&gt;
&lt;p&gt;** 在收回用户权限的时候可以选择级联回收或受限回收，前者会将该用户传播出去的权限也进行回收，而后者不会。如果运行循环授权的话，级联回收会导致死循环，因此不允许级联回收。** 一个用户可能从多个用户处获得同一个权限，级联回收只回收直接或间接从此处获得权限，不影响从其他用户处获得的权限。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;数据库角色是被命名的一组与数据库操作相关的权限，简单来说角色是权限的集合，可以为一组具有相同权限的用户创建一个角色。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;自主存取控制缺点是可能存在数据的 “无意泄露”，例如读取到机密的数据后将其写入到其他没有限制的数据库中，数据本身没有安全性标志。而强制存取控制 (MAC) 则保证了更高程度的安全性。&lt;/p&gt;
&lt;p&gt;强制存取控制对于主体和客体，DBMS 为它们每个实例 (值) 指派一个敏感度标记 (Label)，主体的敏感度标记称为许可证，客体的敏感度标记称为密级。仅当主体的许可证级别大于或等于客体的密级时， 该主体才能读取相应的客体；仅当主体的许可证级别小于或等于客体的密级时， 该主体才能写相应的客体。&lt;/p&gt;
&lt;p&gt;可以利用视图机制实现授予用户查询某些行的权限。&lt;/p&gt;
&lt;p&gt;审计启动一个专用的审计日志，将用户对数据库的所有操作记录在上面。审计的事件包括服务器事件、系统权限、语句事件和模式对象事件。&lt;/p&gt;
&lt;p&gt;推理控制处理强制存取控制未处理的问题，避免用户利用能够访问的数据推知更高密级的数据。&lt;/p&gt;
&lt;p&gt;隐蔽信道处理强制存取控制未解决的问题，高安全等级用户按事先约定方式主动向低安全等级用户传输信息，从而导致高安全敏感信息泄露。例如每列有唯一的序号，低等级用户通过插入试探高等级用户是否有插入该位置的数据。&lt;/p&gt;
&lt;h3 id=&#34;安全层次&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#安全层次&#34;&gt;#&lt;/a&gt; 安全层次&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;系统根据用户标识鉴定用户身份，合法用户才准许进入计算机系统。&lt;/li&gt;
&lt;li&gt;数据库管理系统进行存取控制，只允许用户执行合法操作。&lt;/li&gt;
&lt;li&gt;操作系统有自己的保护措施。&lt;/li&gt;
&lt;li&gt;数据以密码形式存储到数据库中。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/11606/c5870f665e46f11af68e67ec086f3863.png&#34; alt=&#34;安全层次&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;数据库完整性&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#数据库完整性&#34;&gt;#&lt;/a&gt; 数据库完整性&lt;/h1&gt;
&lt;p&gt;数据库的完整性是指数据的正确性和数据的相容性，包括实体完整性、参照完整性和用户定义的完整性。&lt;/p&gt;
&lt;p&gt;数据库的完整性是防止数据库中存在不符合语义的数据，也就是防止数据库中存在不正确的数据。&lt;/p&gt;
&lt;p&gt;完整性和安全性的区别在于：完整性是阻止&lt;strong&gt;合法用户&lt;/strong&gt;通过&lt;strong&gt;合法操作&lt;/strong&gt;向数据库中加入&lt;strong&gt;不正确的数据&lt;/strong&gt;；安全性防范的是&lt;strong&gt;非法用户&lt;/strong&gt;和&lt;strong&gt;非法操作&lt;/strong&gt;存取数据库中的&lt;strong&gt;正确数据&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;为了避免对基本表进行全表扫描，RDBMS 核心一般都会在主码上自动建立一个 UNIQUE 索引。&lt;/p&gt;
&lt;p&gt;使用断言可以指定更具一般性的约束，可以定义涉及多个表的或聚集操作的比较复杂的完整性约束。&lt;/p&gt;
&lt;p&gt;触发器只能定义在基本表上，不能定义在视图上。&lt;/p&gt;
&lt;p&gt;空值的字段上可以定义主键约束。&lt;/p&gt;
&lt;p&gt;‏实体完整性规则检查的内容包括检查主码的各个属性值是否为空，只要有一个为空就拒绝插入或修改；检查主码值是否唯一，如果不唯一就拒绝插入或修改。&lt;/p&gt;
&lt;h3 id=&#34;完整性小结&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#完整性小结&#34;&gt;#&lt;/a&gt; 完整性小结&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;实体完整性&lt;/th&gt;
&lt;th&gt;参照完整性&lt;/th&gt;
&lt;th&gt;用户定义的完整性&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;定义方法&lt;/td&gt;
&lt;td&gt;create table&lt;/td&gt;
&lt;td&gt;create table&lt;/td&gt;
&lt;td&gt;create table&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;检查时机&lt;/td&gt;
&lt;td&gt;执行插入和修改操作&lt;/td&gt;
&lt;td&gt;参照表：插入 / 修改；被参照表：删除 / 修改&lt;/td&gt;
&lt;td&gt;执行插入和修改操作&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;违约操作&lt;/td&gt;
&lt;td&gt;拒绝执行&lt;/td&gt;
&lt;td&gt;拒绝执行 / 级联操作 / 设置为空值&lt;/td&gt;
&lt;td&gt;拒绝执行&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;关系数据理论&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#关系数据理论&#34;&gt;#&lt;/a&gt; 关系数据理论&lt;/h1&gt;
&lt;p&gt;用规范化理论改造关系模式，消除其中不合适的数据依赖。&lt;/p&gt;
&lt;p&gt;数据依赖的主要类型：函数依赖 (FD)、多值依赖 (MVD) 和连接依赖。数据依赖会导致插入异常、删除异常、更新异常和数据冗余问题。&lt;/p&gt;
&lt;p&gt;函数依赖：设 R (U) 是一个属性集 U 上的关系模式，X 和 Y 是 U 的子集。若对于 R (U) 的任意一个可能的关系 r，r 中不可能存在两个元组在 X 上的属性值相等，而在 Y 上的属性值不等则称 &#34;X 函数确定 Y&#34; 或 &#34;Y 函数依赖于 X&#34;，记为&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;X&lt;/mi&gt;&lt;mo lspace=&#34;0em&#34; rspace=&#34;0em&#34;&gt;→&lt;/mo&gt;&lt;mi&gt;Y&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;X{\rightarrow}Y&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.6833em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.07847em;&#34;&gt;X&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mrel&#34;&gt;→&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.22222em;&#34;&gt;Y&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;。还可以根据 X 的真子集是否确定 Y 来判断是 &#34;Y 完全函数依赖于 X，记为&#34;&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;X&lt;/mi&gt;&lt;mo&gt;&lt;mover&gt;&lt;mo&gt;&lt;mo&gt;⟶&lt;/mo&gt;&lt;/mo&gt;&lt;mi&gt;F&lt;/mi&gt;&lt;/mover&gt;&lt;/mo&gt;&lt;mi&gt;Y&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;X\stackrel{F}{\longrightarrow}Y&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1.3003em;vertical-align:-0.011em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.07847em;&#34;&gt;X&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;&lt;span class=&#34;mop op-limits&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:1.2893em;&#34;&gt;&lt;span style=&#34;top:-3em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:3em;&#34;&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&#34;mop&#34;&gt;⟶&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;top:-3.711em;margin-left:0em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:3em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34; style=&#34;margin-right:0.13889em;&#34;&gt;F&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.011em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.6833em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.22222em;&#34;&gt;Y&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 还是 &#34;Y 部分函数依赖于 X，记为&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;X&lt;/mi&gt;&lt;mo&gt;&lt;mover&gt;&lt;mo&gt;&lt;mo&gt;⟶&lt;/mo&gt;&lt;/mo&gt;&lt;mi&gt;P&lt;/mi&gt;&lt;/mover&gt;&lt;/mo&gt;&lt;mi&gt;Y&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;X\stackrel{P}{\longrightarrow}Y&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1.3003em;vertical-align:-0.011em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.07847em;&#34;&gt;X&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;&lt;span class=&#34;mop op-limits&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:1.2893em;&#34;&gt;&lt;span style=&#34;top:-3em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:3em;&#34;&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&#34;mop&#34;&gt;⟶&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;top:-3.711em;margin-left:0em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:3em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34; style=&#34;margin-right:0.13889em;&#34;&gt;P&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.011em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.6833em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.22222em;&#34;&gt;Y&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&#34;。&lt;/p&gt;
&lt;p&gt;设 K 为关系模式 R&amp;lt;U,F&amp;gt; 中的属性或属性组合，若&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;K&lt;/mi&gt;&lt;mo&gt;&lt;mover&gt;&lt;mo&gt;&lt;mo&gt;⟶&lt;/mo&gt;&lt;/mo&gt;&lt;mi&gt;F&lt;/mi&gt;&lt;/mover&gt;&lt;/mo&gt;&lt;mi&gt;U&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;K\stackrel{F}{\longrightarrow}U&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1.3003em;vertical-align:-0.011em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.07153em;&#34;&gt;K&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;&lt;span class=&#34;mop op-limits&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:1.2893em;&#34;&gt;&lt;span style=&#34;top:-3em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:3em;&#34;&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&#34;mop&#34;&gt;⟶&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;top:-3.711em;margin-left:0em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:3em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34; style=&#34;margin-right:0.13889em;&#34;&gt;F&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.011em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.6833em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.10903em;&#34;&gt;U&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;，则称 K 为 R 的一个候选码；如果是&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;K&lt;/mi&gt;&lt;mo&gt;&lt;mover&gt;&lt;mo&gt;&lt;mo&gt;⟶&lt;/mo&gt;&lt;/mo&gt;&lt;mi&gt;P&lt;/mi&gt;&lt;/mover&gt;&lt;/mo&gt;&lt;mi&gt;U&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;K\stackrel{P}{\longrightarrow}U&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1.3003em;vertical-align:-0.011em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.07153em;&#34;&gt;K&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;&lt;span class=&#34;mop op-limits&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:1.2893em;&#34;&gt;&lt;span style=&#34;top:-3em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:3em;&#34;&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&#34;mop&#34;&gt;⟶&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;top:-3.711em;margin-left:0em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:3em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34; style=&#34;margin-right:0.13889em;&#34;&gt;P&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.011em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.6833em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.10903em;&#34;&gt;U&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;，则称 K 为 R 的一个超码。若关系模式 R 有多个候选码，则选择其中一个为主码。&lt;/p&gt;
&lt;p&gt;包含在任意一个候选码中的属性，称为主属性，否则称为非主属性或非码属性。整个属性组是码，称为全码。&lt;/p&gt;
&lt;p&gt;Armstrong 公理系统中包含自反律、增广律和传递律。&lt;/p&gt;
&lt;p&gt;如果&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msup&gt;&lt;mi&gt;G&lt;/mi&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;/msup&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;msup&gt;&lt;mi&gt;F&lt;/mi&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;/msup&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;G^+=F^+&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.7713em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;G&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.7713em;&#34;&gt;&lt;span style=&#34;top:-3.063em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mbin mtight&#34;&gt;+&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.7713em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;F&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.7713em;&#34;&gt;&lt;span style=&#34;top:-3.063em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mbin mtight&#34;&gt;+&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;，就说函数依赖集 F 覆盖 G，或 F 与 G 等价，两个函数依赖集等价是指它们的闭包等价。&lt;/p&gt;
&lt;h2 id=&#34;范式&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#范式&#34;&gt;#&lt;/a&gt; 范式&lt;/h2&gt;
&lt;p&gt;各种范式之间的联系：&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mi&gt;N&lt;/mi&gt;&lt;mi&gt;F&lt;/mi&gt;&lt;mo&gt;⊃&lt;/mo&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mi&gt;N&lt;/mi&gt;&lt;mi&gt;F&lt;/mi&gt;&lt;mo&gt;⊃&lt;/mo&gt;&lt;mn&gt;3&lt;/mn&gt;&lt;mi&gt;N&lt;/mi&gt;&lt;mi&gt;F&lt;/mi&gt;&lt;mo&gt;⊃&lt;/mo&gt;&lt;mi&gt;B&lt;/mi&gt;&lt;mi&gt;C&lt;/mi&gt;&lt;mi&gt;N&lt;/mi&gt;&lt;mi&gt;F&lt;/mi&gt;&lt;mo&gt;⊃&lt;/mo&gt;&lt;mn&gt;4&lt;/mn&gt;&lt;mi&gt;N&lt;/mi&gt;&lt;mi&gt;F&lt;/mi&gt;&lt;mo&gt;⊃&lt;/mo&gt;&lt;mn&gt;5&lt;/mn&gt;&lt;mi&gt;N&lt;/mi&gt;&lt;mi&gt;F&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;1NF\supset 2NF\supset 3NF\supset BCNF\supset 4NF\supset 5NF&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.7224em;vertical-align:-0.0391em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;NF&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;⊃&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.7224em;vertical-align:-0.0391em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;NF&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;⊃&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.7224em;vertical-align:-0.0391em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;NF&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;⊃&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.7224em;vertical-align:-0.0391em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;BCNF&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;⊃&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.7224em;vertical-align:-0.0391em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;NF&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;⊃&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.6833em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;NF&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;，关系属于 n 范式，可以记作&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;R&lt;/mi&gt;&lt;mo lspace=&#34;0em&#34; rspace=&#34;0em&#34;&gt;∈&lt;/mo&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;N&lt;/mi&gt;&lt;mi&gt;F&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;R{\in}nNF&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.7224em;vertical-align:-0.0391em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.00773em;&#34;&gt;R&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mrel&#34;&gt;∈&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;NF&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;低级别的关系模式可以通过模式分解转换为若干个高一级的范式的关系模式的集合，这个过程被称为规范化。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mi&gt;N&lt;/mi&gt;&lt;mi&gt;F&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;1NF&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.6833em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;NF&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;：如果一个关系模式 R 的所有属性都是不可分的数据项，则&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;R&lt;/mi&gt;&lt;mo lspace=&#34;0em&#34; rspace=&#34;0em&#34;&gt;∈&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mi&gt;N&lt;/mi&gt;&lt;mi&gt;F&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;R{\in}1NF&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.7224em;vertical-align:-0.0391em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.00773em;&#34;&gt;R&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mrel&#34;&gt;∈&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;NF&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;。如果&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;R&lt;/mi&gt;&lt;mo lspace=&#34;0em&#34; rspace=&#34;0em&#34;&gt;∈&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mi&gt;N&lt;/mi&gt;&lt;mi&gt;F&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;R{\in}1NF&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.7224em;vertical-align:-0.0391em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.00773em;&#34;&gt;R&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mrel&#34;&gt;∈&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;NF&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;，则会出现插入异常、删除异常、修改复杂和数据冗余度大的问题。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mi&gt;N&lt;/mi&gt;&lt;mi&gt;F&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;2NF&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.6833em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;NF&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;：若关系模式&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;R&lt;/mi&gt;&lt;mo lspace=&#34;0em&#34; rspace=&#34;0em&#34;&gt;∈&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mi&gt;N&lt;/mi&gt;&lt;mi&gt;F&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;R{\in}1NF&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.7224em;vertical-align:-0.0391em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.00773em;&#34;&gt;R&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mrel&#34;&gt;∈&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;NF&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;，并且每一个非主属性都完全依赖于 R 的主码，则&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;R&lt;/mi&gt;&lt;mo lspace=&#34;0em&#34; rspace=&#34;0em&#34;&gt;∈&lt;/mo&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mi&gt;N&lt;/mi&gt;&lt;mi&gt;F&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;R{\in}2NF&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.7224em;vertical-align:-0.0391em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.00773em;&#34;&gt;R&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mrel&#34;&gt;∈&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;NF&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;。如果&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;R&lt;/mi&gt;&lt;mo lspace=&#34;0em&#34; rspace=&#34;0em&#34;&gt;∈&lt;/mo&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mi&gt;N&lt;/mi&gt;&lt;mi&gt;F&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;R{\in}2NF&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.7224em;vertical-align:-0.0391em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.00773em;&#34;&gt;R&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mrel&#34;&gt;∈&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;NF&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;，仍会出现插入异常、删除异常、修改复杂和数据冗余度大的问题，但是相比于 1NF 的情况得到缓解。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mn&gt;3&lt;/mn&gt;&lt;mi&gt;N&lt;/mi&gt;&lt;mi&gt;F&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;3NF&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.6833em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;NF&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;：关系模式&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;R&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34; lspace=&#34;0em&#34; rspace=&#34;0em&#34;&gt;⟨&lt;/mo&gt;&lt;mi&gt;U&lt;/mi&gt;&lt;mo separator=&#34;true&#34;&gt;,&lt;/mo&gt;&lt;mi&gt;F&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;⟩&lt;/mo&gt;&lt;mo lspace=&#34;0em&#34; rspace=&#34;0em&#34;&gt;∈&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mi&gt;N&lt;/mi&gt;&lt;mi&gt;F&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;R{\langle}U,F\rangle{\in}1NF&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.00773em;&#34;&gt;R&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mopen&#34;&gt;⟨&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.10903em;&#34;&gt;U&lt;/span&gt;&lt;span class=&#34;mpunct&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.1667em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;F&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;⟩&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mrel&#34;&gt;∈&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;NF&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;，若 R 中不存在这样的码&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;X&lt;/mi&gt;&lt;mtext&gt;、属性组&lt;/mtext&gt;&lt;mi&gt;Y&lt;/mi&gt;&lt;mtext&gt;及非主属性&lt;/mtext&gt;&lt;mi&gt;Z&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;mi&gt;Y&lt;/mi&gt;&lt;mo&gt;⊉&lt;/mo&gt;&lt;mi&gt;Z&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;X、属性组Y及非主属性Z(Y{\not\supseteq}Z&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.07847em;&#34;&gt;X&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;、属性组&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.22222em;&#34;&gt;Y&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;及非主属性&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.07153em;&#34;&gt;Z&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.22222em;&#34;&gt;Y&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mrel&#34;&gt;&lt;span class=&#34;mord vbox&#34;&gt;&lt;span class=&#34;thinbox&#34;&gt;&lt;span class=&#34;rlap&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.8889em;vertical-align:-0.1944em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;inner&#34;&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mrel&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;fix&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;⊇&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.07153em;&#34;&gt;Z&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;)，使得&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;X&lt;/mi&gt;&lt;mo lspace=&#34;0em&#34; rspace=&#34;0em&#34;&gt;→&lt;/mo&gt;&lt;mi&gt;Y&lt;/mi&gt;&lt;mo separator=&#34;true&#34;&gt;,&lt;/mo&gt;&lt;mi&gt;Y&lt;/mi&gt;&lt;mo lspace=&#34;0em&#34; rspace=&#34;0em&#34;&gt;→&lt;/mo&gt;&lt;mi&gt;Z&lt;/mi&gt;&lt;mo separator=&#34;true&#34;&gt;,&lt;/mo&gt;&lt;mi&gt;Y&lt;/mi&gt;&lt;mo&gt;↛&lt;/mo&gt;&lt;mi&gt;X&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;X{\rightarrow}Y,Y{\rightarrow}Z,Y{\not\rightarrow}X&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.8889em;vertical-align:-0.1944em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.07847em;&#34;&gt;X&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mrel&#34;&gt;→&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.22222em;&#34;&gt;Y&lt;/span&gt;&lt;span class=&#34;mpunct&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.1667em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.22222em;&#34;&gt;Y&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mrel&#34;&gt;→&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.07153em;&#34;&gt;Z&lt;/span&gt;&lt;span class=&#34;mpunct&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.1667em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.22222em;&#34;&gt;Y&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mrel&#34;&gt;&lt;span class=&#34;mord vbox&#34;&gt;&lt;span class=&#34;thinbox&#34;&gt;&lt;span class=&#34;rlap&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.8889em;vertical-align:-0.1944em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;inner&#34;&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mrel&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;fix&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;→&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.07847em;&#34;&gt;X&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 成立，则称&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;R&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34; lspace=&#34;0em&#34; rspace=&#34;0em&#34;&gt;⟨&lt;/mo&gt;&lt;mi&gt;U&lt;/mi&gt;&lt;mo separator=&#34;true&#34;&gt;,&lt;/mo&gt;&lt;mi&gt;F&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;⟩&lt;/mo&gt;&lt;mo lspace=&#34;0em&#34; rspace=&#34;0em&#34;&gt;∈&lt;/mo&gt;&lt;mn&gt;3&lt;/mn&gt;&lt;mi&gt;N&lt;/mi&gt;&lt;mi&gt;F&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;R{\langle}U,F\rangle{\in}3NF&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.00773em;&#34;&gt;R&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mopen&#34;&gt;⟨&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.10903em;&#34;&gt;U&lt;/span&gt;&lt;span class=&#34;mpunct&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.1667em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;F&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;⟩&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mrel&#34;&gt;∈&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;NF&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;，简而言之即不存在非主属性传递函数依赖于候选码。如果&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;R&lt;/mi&gt;&lt;mo lspace=&#34;0em&#34; rspace=&#34;0em&#34;&gt;∈&lt;/mo&gt;&lt;mn&gt;3&lt;/mn&gt;&lt;mi&gt;N&lt;/mi&gt;&lt;mi&gt;F&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;R{\in}3NF&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.7224em;vertical-align:-0.0391em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.00773em;&#34;&gt;R&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mrel&#34;&gt;∈&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;NF&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;，仍会出现插入异常、删除异常、修改复杂和数据冗余度大的问题，但是相比于&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mi&gt;N&lt;/mi&gt;&lt;mi&gt;F&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;2NF&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.6833em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;NF&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 的情况得到缓解。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;B&lt;/mi&gt;&lt;mi&gt;C&lt;/mi&gt;&lt;mi&gt;N&lt;/mi&gt;&lt;mi&gt;F&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;BCNF&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.6833em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;BCNF&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;：设关系模式&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;R&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34; lspace=&#34;0em&#34; rspace=&#34;0em&#34;&gt;⟨&lt;/mo&gt;&lt;mi&gt;U&lt;/mi&gt;&lt;mo separator=&#34;true&#34;&gt;,&lt;/mo&gt;&lt;mi&gt;F&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;⟩&lt;/mo&gt;&lt;mo lspace=&#34;0em&#34; rspace=&#34;0em&#34;&gt;∈&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mi&gt;N&lt;/mi&gt;&lt;mi&gt;F&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;R{\langle}U,F\rangle{\in}1NF&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.00773em;&#34;&gt;R&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mopen&#34;&gt;⟨&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.10903em;&#34;&gt;U&lt;/span&gt;&lt;span class=&#34;mpunct&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.1667em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;F&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;⟩&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mrel&#34;&gt;∈&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;NF&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;，如果对于 R 的每个函数依赖&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;X&lt;/mi&gt;&lt;mo lspace=&#34;0em&#34; rspace=&#34;0em&#34;&gt;→&lt;/mo&gt;&lt;mi&gt;Y&lt;/mi&gt;&lt;mtext&gt;，且&lt;/mtext&gt;&lt;mi&gt;X&lt;/mi&gt;&lt;mo&gt;⊅&lt;/mo&gt;&lt;mi&gt;Y&lt;/mi&gt;&lt;mtext&gt;时&lt;/mtext&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;X{\rightarrow}Y，且X{\not\supset}Y时&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.8889em;vertical-align:-0.1944em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.07847em;&#34;&gt;X&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mrel&#34;&gt;→&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.22222em;&#34;&gt;Y&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;，且&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.07847em;&#34;&gt;X&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mrel&#34;&gt;&lt;span class=&#34;mord vbox&#34;&gt;&lt;span class=&#34;thinbox&#34;&gt;&lt;span class=&#34;rlap&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.8889em;vertical-align:-0.1944em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;inner&#34;&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mrel&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;fix&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;⊃&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.22222em;&#34;&gt;Y&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;时&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;，X 必含有码，那么&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;R&lt;/mi&gt;&lt;mo lspace=&#34;0em&#34; rspace=&#34;0em&#34;&gt;∈&lt;/mo&gt;&lt;mi&gt;B&lt;/mi&gt;&lt;mi&gt;C&lt;/mi&gt;&lt;mi&gt;N&lt;/mi&gt;&lt;mi&gt;F&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;R{\in}BCNF&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.7224em;vertical-align:-0.0391em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.00773em;&#34;&gt;R&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mrel&#34;&gt;∈&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;BCNF&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;。即在关系模型 R 中，每个决定因素都包含码。3NF 出现问题是因为存在主属性 J 部分依赖于码&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;mi&gt;S&lt;/mi&gt;&lt;mo separator=&#34;true&#34;&gt;,&lt;/mo&gt;&lt;mi&gt;T&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;)&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;(S,T)&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.05764em;&#34;&gt;S&lt;/span&gt;&lt;span class=&#34;mpunct&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.1667em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;，因此&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;B&lt;/mi&gt;&lt;mi&gt;C&lt;/mi&gt;&lt;mi&gt;N&lt;/mi&gt;&lt;mi&gt;F&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;BCNF&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.6833em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;BCNF&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 的关系模式中要求没有任何属性对码的部分函数依赖和传递函数依赖。&lt;/p&gt;
&lt;p&gt;如果一个关系数据库中的所有关系模式都属于&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;B&lt;/mi&gt;&lt;mi&gt;C&lt;/mi&gt;&lt;mi&gt;N&lt;/mi&gt;&lt;mi&gt;F&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;BCNF&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.6833em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;BCNF&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;，那么在函数依赖范畴内，它已实现模式的彻底分解，达到了最高的规范化程度，消除了操作异常等诸多问题。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1NF 消除非主属性对码的部分函数依赖满足 2NF，2NF 消除非主属性对码的传递函数依赖满足 3NF，3NF 消除主属性对码的部分和传递函数依赖满足 BCNF，BCNF 消除非平凡且非函数依赖的多值依赖满足 4NF。&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;模式分解&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#模式分解&#34;&gt;#&lt;/a&gt; 模式分解&lt;/h2&gt;
&lt;p&gt;记&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;ρ&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mo stretchy=&#34;false&#34;&gt;{&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;R&lt;/mi&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/msub&gt;&lt;mo stretchy=&#34;false&#34; lspace=&#34;0em&#34; rspace=&#34;0em&#34;&gt;⟨&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;U&lt;/mi&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/msub&gt;&lt;mo separator=&#34;true&#34;&gt;,&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;F&lt;/mi&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/msub&gt;&lt;mo stretchy=&#34;false&#34;&gt;⟩&lt;/mo&gt;&lt;mo separator=&#34;true&#34;&gt;,&lt;/mo&gt;&lt;mo&gt;…&lt;/mo&gt;&lt;mo separator=&#34;true&#34;&gt;,&lt;/mo&gt;&lt;mo stretchy=&#34;false&#34;&gt;{&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;R&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;/msub&gt;&lt;mo stretchy=&#34;false&#34; lspace=&#34;0em&#34; rspace=&#34;0em&#34;&gt;⟨&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;U&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;/msub&gt;&lt;mo separator=&#34;true&#34;&gt;,&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;F&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;/msub&gt;&lt;mo stretchy=&#34;false&#34;&gt;⟩&lt;/mo&gt;&lt;mo stretchy=&#34;false&#34;&gt;}&lt;/mo&gt;&lt;mtext&gt;是&lt;/mtext&gt;&lt;mi&gt;R&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34; lspace=&#34;0em&#34; rspace=&#34;0em&#34;&gt;⟨&lt;/mo&gt;&lt;mi&gt;U&lt;/mi&gt;&lt;mo separator=&#34;true&#34;&gt;,&lt;/mo&gt;&lt;mi&gt;F&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;⟩&lt;/mo&gt;&lt;mtext&gt;的一个分解，若对&lt;/mtext&gt;&lt;mi&gt;R&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34; lspace=&#34;0em&#34; rspace=&#34;0em&#34;&gt;⟨&lt;/mo&gt;&lt;mi&gt;U&lt;/mi&gt;&lt;mo separator=&#34;true&#34;&gt;,&lt;/mo&gt;&lt;mi&gt;F&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;⟩&lt;/mo&gt;&lt;mtext&gt;的任何一个关系&lt;/mtext&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mtext&gt;均有&lt;/mtext&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mtext&gt;在&lt;/mtext&gt;&lt;mi&gt;ρ&lt;/mi&gt;&lt;mtext&gt;中各关系模式上的投影的自然连接成立，则称分解&lt;/mtext&gt;&lt;mi&gt;ρ&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;{\rho}=\{R_1{\langle}U_1,F_1\rangle,\dots,\{R_n{\langle}U_n,F_n\rangle\}是R{\langle}U,F\rangle的一个分解，若对R{\langle}U,F\rangle的任何一个关系r均有r=r在\rho中各关系模式上的投影的自然连接成立，则称分解\rho&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.625em;vertical-align:-0.1944em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;ρ&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.00773em;&#34;&gt;R&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.3011em;&#34;&gt;&lt;span style=&#34;top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mopen&#34;&gt;⟨&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.10903em;&#34;&gt;U&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.3011em;&#34;&gt;&lt;span style=&#34;top:-2.55em;margin-left:-0.109em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mpunct&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.1667em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;F&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.3011em;&#34;&gt;&lt;span style=&#34;top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;⟩&lt;/span&gt;&lt;span class=&#34;mpunct&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.1667em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;minner&#34;&gt;…&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.1667em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mpunct&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.1667em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.00773em;&#34;&gt;R&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.1514em;&#34;&gt;&lt;span style=&#34;top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34;&gt;n&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mopen&#34;&gt;⟨&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.10903em;&#34;&gt;U&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.1514em;&#34;&gt;&lt;span style=&#34;top:-2.55em;margin-left:-0.109em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34;&gt;n&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mpunct&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.1667em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;F&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.1514em;&#34;&gt;&lt;span style=&#34;top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34;&gt;n&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;⟩}&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;是&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.00773em;&#34;&gt;R&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mopen&#34;&gt;⟨&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.10903em;&#34;&gt;U&lt;/span&gt;&lt;span class=&#34;mpunct&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.1667em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;F&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;⟩&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;的一个分解，若对&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.00773em;&#34;&gt;R&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mopen&#34;&gt;⟨&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.10903em;&#34;&gt;U&lt;/span&gt;&lt;span class=&#34;mpunct&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.1667em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;F&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;⟩&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;的任何一个关系&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;均有&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.8778em;vertical-align:-0.1944em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.02778em;&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;在&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;ρ&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;中各关系模式上的投影的自然连接成立，则称分解&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;ρ&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 具有无损连接性，简称无损分解。&lt;a href=&#34;https://zhuanlan.zhihu.com/p/151039521&#34;&gt;无损分解算法&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;记&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;ρ&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mo stretchy=&#34;false&#34;&gt;{&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;R&lt;/mi&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/msub&gt;&lt;mo stretchy=&#34;false&#34; lspace=&#34;0em&#34; rspace=&#34;0em&#34;&gt;⟨&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;U&lt;/mi&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/msub&gt;&lt;mo separator=&#34;true&#34;&gt;,&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;F&lt;/mi&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/msub&gt;&lt;mo stretchy=&#34;false&#34;&gt;⟩&lt;/mo&gt;&lt;mo separator=&#34;true&#34;&gt;,&lt;/mo&gt;&lt;mo&gt;…&lt;/mo&gt;&lt;mo separator=&#34;true&#34;&gt;,&lt;/mo&gt;&lt;mo stretchy=&#34;false&#34;&gt;{&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;R&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;/msub&gt;&lt;mo stretchy=&#34;false&#34; lspace=&#34;0em&#34; rspace=&#34;0em&#34;&gt;⟨&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;U&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;/msub&gt;&lt;mo separator=&#34;true&#34;&gt;,&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;F&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;/msub&gt;&lt;mo stretchy=&#34;false&#34;&gt;⟩&lt;/mo&gt;&lt;mo stretchy=&#34;false&#34;&gt;}&lt;/mo&gt;&lt;mtext&gt;是&lt;/mtext&gt;&lt;mi&gt;R&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34; lspace=&#34;0em&#34; rspace=&#34;0em&#34;&gt;⟨&lt;/mo&gt;&lt;mi&gt;U&lt;/mi&gt;&lt;mo separator=&#34;true&#34;&gt;,&lt;/mo&gt;&lt;mi&gt;F&lt;/mi&gt;&lt;mo stretchy=&#34;false&#34;&gt;⟩&lt;/mo&gt;&lt;mtext&gt;的一个分解，若&lt;/mtext&gt;&lt;mi&gt;F&lt;/mi&gt;&lt;mtext&gt;所逻辑蕴含的函数依赖一定也为分解后所有的关系模式中的函数依赖&lt;/mtext&gt;&lt;msub&gt;&lt;mi&gt;F&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;/msub&gt;&lt;mtext&gt;所逻辑蕴含，即&lt;/mtext&gt;&lt;msup&gt;&lt;mi&gt;F&lt;/mi&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;/msup&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mo stretchy=&#34;false&#34;&gt;(&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;F&lt;/mi&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/msub&gt;&lt;mo lspace=&#34;0em&#34; rspace=&#34;0em&#34;&gt;∪&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;F&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msub&gt;&lt;mo lspace=&#34;0em&#34; rspace=&#34;0em&#34;&gt;∪&lt;/mo&gt;&lt;mo&gt;…&lt;/mo&gt;&lt;mo lspace=&#34;0em&#34; rspace=&#34;0em&#34;&gt;∪&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;F&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;/msub&gt;&lt;msup&gt;&lt;mo stretchy=&#34;false&#34;&gt;)&lt;/mo&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;/msup&gt;&lt;mtext&gt;，则称关系模式&lt;/mtext&gt;&lt;mi&gt;R&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;{\rho}=\{R_1{\langle}U_1,F_1\rangle,\dots,\{R_n{\langle}U_n,F_n\rangle\}是R{\langle}U,F\rangle的一个分解，若F所逻辑蕴含的函数依赖一定也为分解后所有的关系模式中的函数依赖F_i所逻辑蕴含，即F^+=(F_1{\cup}F_2{\cup}\dots{\cup}F_n)^+，则称关系模式R&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.625em;vertical-align:-0.1944em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;ρ&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1.0213em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.00773em;&#34;&gt;R&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.3011em;&#34;&gt;&lt;span style=&#34;top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mopen&#34;&gt;⟨&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.10903em;&#34;&gt;U&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.3011em;&#34;&gt;&lt;span style=&#34;top:-2.55em;margin-left:-0.109em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mpunct&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.1667em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;F&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.3011em;&#34;&gt;&lt;span style=&#34;top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;⟩&lt;/span&gt;&lt;span class=&#34;mpunct&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.1667em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;minner&#34;&gt;…&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.1667em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mpunct&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.1667em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.00773em;&#34;&gt;R&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.1514em;&#34;&gt;&lt;span style=&#34;top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34;&gt;n&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mopen&#34;&gt;⟨&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.10903em;&#34;&gt;U&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.1514em;&#34;&gt;&lt;span style=&#34;top:-2.55em;margin-left:-0.109em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34;&gt;n&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mpunct&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.1667em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;F&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.1514em;&#34;&gt;&lt;span style=&#34;top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34;&gt;n&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;⟩}&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;是&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.00773em;&#34;&gt;R&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mopen&#34;&gt;⟨&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.10903em;&#34;&gt;U&lt;/span&gt;&lt;span class=&#34;mpunct&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.1667em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;F&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;⟩&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;的一个分解，若&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;F&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;所逻辑蕴含的函数依赖一定也为分解后所有的关系模式中的函数依赖&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;F&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.3117em;&#34;&gt;&lt;span style=&#34;top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34;&gt;i&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;所逻辑蕴含，即&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;F&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.7713em;&#34;&gt;&lt;span style=&#34;top:-3.063em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mbin mtight&#34;&gt;+&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mrel&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.2778em;&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1.0213em;vertical-align:-0.25em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mopen&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;F&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.3011em;&#34;&gt;&lt;span style=&#34;top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord&#34;&gt;∪&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;F&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.3011em;&#34;&gt;&lt;span style=&#34;top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord&#34;&gt;∪&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.1667em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;minner&#34;&gt;…&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.1667em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord&#34;&gt;∪&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;F&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.1514em;&#34;&gt;&lt;span style=&#34;top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34;&gt;n&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mclose&#34;&gt;&lt;span class=&#34;mclose&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.7713em;&#34;&gt;&lt;span style=&#34;top:-3.063em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mbin mtight&#34;&gt;+&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;，则称关系模式&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.00773em;&#34;&gt;R&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 的这个分解是保持函数依赖的。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;无损连接&lt;/th&gt;
&lt;th&gt;保持依赖&lt;/th&gt;
&lt;th&gt;达到的范式&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Y&lt;/td&gt;
&lt;td&gt;3NF，不一定 BCNF&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Y&lt;/td&gt;
&lt;td&gt;Y&lt;/td&gt;
&lt;td&gt;3NF，不一定 BCNF&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td colspan=&#34;2&#34;&gt;Y&lt;/td&gt;
&lt;td&gt;4NF&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;数据库设计&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#数据库设计&#34;&gt;#&lt;/a&gt; 数据库设计&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;数据库设计分为 6 个阶段：需求分析、概念结构设计、逻辑结构设计、物理结构设计、数据库实施、数据库运行和维护。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;数据项是数据的最小组成单位，若干个数据项可以组成一个数据结构。&lt;/p&gt;
&lt;p&gt;数据流是数据结构在系统内部传输的路径。&lt;/p&gt;
&lt;p&gt;把参与联系的实体型的数目称为联系的度。&lt;/p&gt;
&lt;p&gt;E-R 模型使用方框代表实体，菱形代表联系，实体之间的联系可以分为 1 对 1、1 对多和多对多。&lt;/p&gt;
&lt;p&gt;E-R 模型三种主要的扩展：ISA 联系 (父类 - 子类联系，表示 is a)、基数约束和 PART-OF 联系。&lt;/p&gt;
&lt;p&gt;ISA 联系又被称作父类 - 子类联系，表示 is a，符号表示为三角形。叉号 X 表示不相交约束，即一个父类的实体最多属于一个子类实体集。完备性约束则是描述父类中的一个实体是否必须是某个子类的实体，如果是则叫做完全特化，否则称为部分特化。&lt;/p&gt;
&lt;p&gt;基数约束是实体型中的任何一个实体可以在联系中出现的最小次数和最多次数。&lt;/p&gt;
&lt;p&gt;Part-of 联系是描述某个实体型是另外一个实体型的一部分。当整体实体被破坏，部分实体仍然可以存在，则称为非独占联系，否则称为独占联系。&lt;/p&gt;
&lt;p&gt;概念结构设计要解决属性冲突、命名冲突和结构冲突。&lt;/p&gt;
&lt;p&gt;关系数据库物理设计的内容是为关系模式选取存取方法和为关系、索引、日志、备份等数据库文件选择物理存储结构。&lt;/p&gt;
&lt;p&gt;为了提高某个属性 (或属性组) 的查询速度，把这个 (或这些) 属性上具有相同值的元组集中存放在连续的物理块中成为聚簇。&lt;/p&gt;
&lt;p&gt;聚簇的局限性在于一个基本表最多只能建立一个聚簇索引，且建立与维护聚簇的开销相当大。对已有关系建立聚簇，将导致关系中元组的物理存储位置移动，并使此关系上原有的索引无效，必须重建。&lt;/p&gt;
&lt;p&gt;数据库的重组织是指物理层面的，重构造是指逻辑层面的，根据新环境调整数据库的模式和内模式。&lt;/p&gt;
&lt;p&gt;‎在 E-R 图向关系模型转换的过程中，无论是一个 1:1 的联系，一个 1：n 的联系，还是一个 m：n 的联系，都可以转换为一个独立的关系模式。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/11606/ba464d37c4370ec918c7e38bd5bb6cd8.jpg&#34; alt=&#34;数据库设计.jpg&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;数据库编程&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#数据库编程&#34;&gt;#&lt;/a&gt; 数据库编程&lt;/h1&gt;
&lt;h2 id=&#34;技术方案&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#技术方案&#34;&gt;#&lt;/a&gt; 技术方案&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;利用高级语言的表达能力：嵌入式 SQL。&lt;/li&gt;
&lt;li&gt;拓展 SQL 语言对应过程控制的表达能力：过程化 SQL。&lt;/li&gt;
&lt;li&gt;在一个更大的视野上，将数据库看作是一类数据源：ODBC 编程。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;嵌入式sql&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#嵌入式sql&#34;&gt;#&lt;/a&gt; 嵌入式 SQL&lt;/h2&gt;
&lt;p&gt;当指示变量 &amp;lt; 0 时，将对应的属性值置为空值，可以用作新增学生但成绩尚未获取时，将成绩属性通过指示变量置为空值。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;游标是数据库系统为用户开设的一个数据缓冲区，存放 SQL 语句的执行结果。每个游标区都有一个名字，可以理解为该数据区的指针。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;使用游标的原因是 SQL 语言与主语言具有不同的数据处理方式。SQL 语言是面向集合的，一条 SQL 语句原则上可以产生或处理多条记录；而主语言是面向记录的，一组主语言只能存放一条记录。&lt;/p&gt;
&lt;h2 id=&#34;过程化sql&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#过程化sql&#34;&gt;#&lt;/a&gt; 过程化 SQL&lt;/h2&gt;
&lt;p&gt;过程化 SQL 是对 SQL 的扩展，基本结构是块，块可以嵌套 (调用)，每个块可以完成一个逻辑操作；增加了变量、常量等的定义语句；增加了变量赋值语句和流程控制语句。&lt;/p&gt;
&lt;p&gt;存储过程是由过程化 SQL 语句书写的一段程序，经编译和优化后，命名并存储在数据库服务器中，使用时只要调用即可。&lt;/p&gt;
&lt;p&gt;函数和存储过程的异同：都是持久性存储模块，但函数必须指定返回的类型。&lt;/p&gt;
&lt;h1 id=&#34;odbc&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#odbc&#34;&gt;#&lt;/a&gt; ODBC&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;句柄 (handle) 是 32 位整数值，代表一个指针，可分为：环境句柄、连接句柄、语句句柄和描述符句柄。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;每个 ODBC 应用程序需要建立一个 ODBC 环境，分配一个环境句柄，存取数据的全局性背景，如环境状态、当前环境状态判断、当前在环境上分配的连接句柄等。一个环境句柄可以建立多个连接句柄，每个连接句柄实现与一个数据源之间的连接。&lt;/p&gt;
&lt;img src=&#34;https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/11606/ba6672642863f1d2fb36c5034f0c05bb.png&#34; alt=&#34;ODBC的工作流程.png&#34; style=&#34;zoom:50%;&#34;&gt;
&lt;h1 id=&#34;关系查询处理和查询优化&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#关系查询处理和查询优化&#34;&gt;#&lt;/a&gt; 关系查询处理和查询优化&lt;/h1&gt;
&lt;p&gt;有效性检查：检查语句中的数据库对象，如关系名、属性名是否存在和有效，会根据数据字典中有关的模式定义信息进行检查。&lt;/p&gt;
&lt;p&gt;视图转换：如果查询是对视图的操作，则要用视图消解法把对视图的操作转换成对基本表的操作。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;查询优化的选择依据：基于规则、基于代价和基于语义。&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;代数优化&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#代数优化&#34;&gt;#&lt;/a&gt; 代数优化&lt;/h2&gt;
&lt;p&gt;连接、笛卡尔积交换律：设&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msub&gt;&lt;mi&gt;E&lt;/mi&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/msub&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;E_1&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.8333em;vertical-align:-0.15em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.05764em;&#34;&gt;E&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.3011em;&#34;&gt;&lt;span style=&#34;top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 和&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msub&gt;&lt;mi&gt;E&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msub&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;E_2&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.8333em;vertical-align:-0.15em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.05764em;&#34;&gt;E&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.3011em;&#34;&gt;&lt;span style=&#34;top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 是关系代数表达式，&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;F&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;F&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.6833em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.13889em;&#34;&gt;F&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 是连接关系运算的条件，则有&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msub&gt;&lt;mi&gt;E&lt;/mi&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/msub&gt;&lt;mo lspace=&#34;0em&#34; rspace=&#34;0em&#34;&gt;×&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;E&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msub&gt;&lt;mo lspace=&#34;0em&#34; rspace=&#34;0em&#34;&gt;≡&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;E&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msub&gt;&lt;mo lspace=&#34;0em&#34; rspace=&#34;0em&#34;&gt;×&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;E&lt;/mi&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/msub&gt;&lt;mo separator=&#34;true&#34;&gt;;&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;E&lt;/mi&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/msub&gt;&lt;mo lspace=&#34;0em&#34; rspace=&#34;0em&#34;&gt;⋈&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;E&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msub&gt;&lt;mo lspace=&#34;0em&#34; rspace=&#34;0em&#34;&gt;≡&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;E&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msub&gt;&lt;mo lspace=&#34;0em&#34; rspace=&#34;0em&#34;&gt;⋈&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;E&lt;/mi&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/msub&gt;&lt;mo separator=&#34;true&#34;&gt;;&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;E&lt;/mi&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/msub&gt;&lt;msub&gt;&lt;mo lspace=&#34;0em&#34; rspace=&#34;0em&#34;&gt;▹&lt;/mo&gt;&lt;mi&gt;F&lt;/mi&gt;&lt;/msub&gt;&lt;mo lspace=&#34;0em&#34; rspace=&#34;0em&#34;&gt;◃&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;E&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msub&gt;&lt;mo lspace=&#34;0em&#34; rspace=&#34;0em&#34;&gt;≡&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;E&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msub&gt;&lt;msub&gt;&lt;mo lspace=&#34;0em&#34; rspace=&#34;0em&#34;&gt;▹&lt;/mo&gt;&lt;mi&gt;F&lt;/mi&gt;&lt;/msub&gt;&lt;mo lspace=&#34;0em&#34; rspace=&#34;0em&#34;&gt;◃&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;E&lt;/mi&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/msub&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;E_1{\times}E_2{\equiv}E_2{\times}E_1;E_1{\bowtie}E_2{\equiv}E_2{\bowtie}E_1;E_1{\triangleright}_F{\triangleleft}E_2{\equiv}E_2{\triangleright}_F{\triangleleft}E_1&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.8778em;vertical-align:-0.1944em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.05764em;&#34;&gt;E&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.3011em;&#34;&gt;&lt;span style=&#34;top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord&#34;&gt;×&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.05764em;&#34;&gt;E&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.3011em;&#34;&gt;&lt;span style=&#34;top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mrel&#34;&gt;≡&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.05764em;&#34;&gt;E&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.3011em;&#34;&gt;&lt;span style=&#34;top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord&#34;&gt;×&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.05764em;&#34;&gt;E&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.3011em;&#34;&gt;&lt;span style=&#34;top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mpunct&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.1667em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.05764em;&#34;&gt;E&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.3011em;&#34;&gt;&lt;span style=&#34;top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mrel&#34;&gt;⋈&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.05764em;&#34;&gt;E&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.3011em;&#34;&gt;&lt;span style=&#34;top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mrel&#34;&gt;≡&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.05764em;&#34;&gt;E&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.3011em;&#34;&gt;&lt;span style=&#34;top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mrel&#34;&gt;⋈&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.05764em;&#34;&gt;E&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.3011em;&#34;&gt;&lt;span style=&#34;top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mpunct&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;mspace&#34; style=&#34;margin-right:0.1667em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.05764em;&#34;&gt;E&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.3011em;&#34;&gt;&lt;span style=&#34;top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord&#34;&gt;▹&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.3283em;&#34;&gt;&lt;span style=&#34;top:-2.55em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34; style=&#34;margin-right:0.13889em;&#34;&gt;F&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord&#34;&gt;◃&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.05764em;&#34;&gt;E&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.3011em;&#34;&gt;&lt;span style=&#34;top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mrel&#34;&gt;≡&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.05764em;&#34;&gt;E&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.3011em;&#34;&gt;&lt;span style=&#34;top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord&#34;&gt;▹&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.3283em;&#34;&gt;&lt;span style=&#34;top:-2.55em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34; style=&#34;margin-right:0.13889em;&#34;&gt;F&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord&#34;&gt;◃&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.05764em;&#34;&gt;E&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.3011em;&#34;&gt;&lt;span style=&#34;top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;。也有类似的结合律。&lt;/p&gt;
&lt;p&gt;此外还有选择与投影操作、笛卡尔、并、差、自然连接都有分配率，投影与笛卡尔积、并的分配律。&lt;/p&gt;
&lt;h3 id=&#34;代数优化步骤&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#代数优化步骤&#34;&gt;#&lt;/a&gt; 代数优化步骤&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;从查询&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;Q&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;Q&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.8778em;vertical-align:-0.1944em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;Q&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 出发，按照事先约定的规则对 Q 进行变换，获得&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msub&gt;&lt;mi&gt;Q&lt;/mi&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/msub&gt;&lt;mtext&gt;，&lt;/mtext&gt;&lt;msub&gt;&lt;mi&gt;Q&lt;/mi&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/msub&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;Q_1，Q_1&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.8778em;vertical-align:-0.1944em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;Q&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.3011em;&#34;&gt;&lt;span style=&#34;top:-2.55em;margin-left:0em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;mord cjk_fallback&#34;&gt;，&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;Q&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.3011em;&#34;&gt;&lt;span style=&#34;top:-2.55em;margin-left:0em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 必须与&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;Q&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;Q&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.8778em;vertical-align:-0.1944em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;Q&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 等价。&lt;/li&gt;
&lt;li&gt;确保&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msub&gt;&lt;mi&gt;Q&lt;/mi&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/msub&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;Q_1&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.8778em;vertical-align:-0.1944em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;Q&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.3011em;&#34;&gt;&lt;span style=&#34;top:-2.55em;margin-left:0em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 的执行代价比&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;Q&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;Q&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.8778em;vertical-align:-0.1944em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord mathnormal&#34;&gt;Q&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 的执行代价低。&lt;/li&gt;
&lt;li&gt;直到找不到执行代价更小的等价表达式，结束。存在的问题是找到的不一定是全局最优解，而是局部最优解。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;典型的启发式规则&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#典型的启发式规则&#34;&gt;#&lt;/a&gt; 典型的启发式规则&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;选择运算应尽可能先做，这是优化策略中最重要、最基本的一条。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;把投影运算和选择运算同时进行。&lt;/li&gt;
&lt;li&gt;把投影同其前或其后的双目运算结合起来，没有 必要为了去掉某些字段而扫描一遍关系。&lt;/li&gt;
&lt;li&gt;把某些选择同在它前面要执行的笛卡尔积结合起 来成为一个连接运算，连接特别是等值连接运算要比 同样关系上的笛卡尔积省很多时间。&lt;/li&gt;
&lt;li&gt;找出公共子表达式，进行计算后存储结果。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;数据库恢复技术&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#数据库恢复技术&#34;&gt;#&lt;/a&gt; 数据库恢复技术&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;事务的 ACID 特性：原子性 (Atomicity)、一致性 (Comsistency)、隔离性 (Isolation)、持续性 (Durability)。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;故障的种类：事务内部的故障、系统故障、介质故障、计算机病毒。&lt;/p&gt;
&lt;p&gt;系统故障的恢复需要做两件事情：撤销所有未完成的事务和重做所有己提交的事务。&lt;/p&gt;
&lt;p&gt;转储方法：静态转储和动态转储、海量转储和增量转储。&lt;/p&gt;
&lt;p&gt;事务分为以记录为单位和以块为单位。&lt;/p&gt;
&lt;p&gt;以记录为单位的日志文件内容 ：各个事务的开始标记 (BEGIN TRANSACTION) 、各个事务的结束标记 (COMMIT 或 ROLLBACK) 、各个事务的所有更新操作。&lt;/p&gt;
&lt;p&gt;以块为单位的日志文件内容：事务标识和被更新的数据块。&lt;/p&gt;
&lt;p&gt;为保证数据库是可恢复的，登记日志文件时必须遵循两条原则 ：登记的次序严格按并发事务执行的时间次序 ；必须先写日志文件，后写数据库。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;事务故障的恢复：UNDO；系统故障的恢复：UNDO+REDO；介质故障的恢复；重装后援副本 + REDO。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;检查点的出现是为了解决两个问题：搜索整个日志将耗费大量时间；UNDO 操作重新执行，浪费了大量时间。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;具有检查点 (checkpoint) 的恢复技术：在日志文件中增加检查点记录 (checkpoint)；增加重新开始文件；恢复子系统在登录日志文件期间动态地维护日志。&lt;/p&gt;
&lt;p&gt;检查点记录的内容：建立检查点时刻所有正在执行的事务清单和这些事务最近一个日志记录的地址。事务会形成一条链表，因此记录地址可以更快对事务进程处理。&lt;/p&gt;
&lt;p&gt;重新开始文件记录每个检查点记录在日志文件中的地址。&lt;/p&gt;
&lt;h3 id=&#34;检查点步骤&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#检查点步骤&#34;&gt;#&lt;/a&gt; 检查点步骤&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;将当前日志缓冲区中的所有日志记录写入磁盘的日志文件上&lt;/li&gt;
&lt;li&gt;在日志文件中写入一个检查点记录&lt;/li&gt;
&lt;li&gt;将当前数据缓冲区的所有数据记录写入磁盘的数据库中&lt;/li&gt;
&lt;li&gt;把检查点记录在日志文件中的地址写入一个重新开始文件&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;并发控制&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#并发控制&#34;&gt;#&lt;/a&gt; 并发控制&lt;/h1&gt;
&lt;p&gt;并发控制的主要技术：封锁 (Locking)、时间戳 (Timestamp)、乐观控制法和多版本并发控制 (VCC)。&lt;/p&gt;
&lt;h2 id=&#34;封锁协议&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#封锁协议&#34;&gt;#&lt;/a&gt; 封锁协议&lt;/h2&gt;
&lt;p&gt;封锁协议的区别主要在于读操作的申请封锁和释放锁的时机。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;一级封锁协议：事务 T 在&lt;strong&gt;修改数据&lt;/strong&gt; R 之前必须先对其加 X 锁，直到事务结束才释放。事务结束是指正常结束 (commit) 或非正常结束 (rollback)。一级封锁协议可防止丢失修改，并保证事务 T 是可恢复的。&lt;/li&gt;
&lt;li&gt;二级封锁协议：&lt;strong&gt;一级封锁协议&lt;/strong&gt;加上事务 T 在&lt;strong&gt;读取数据&lt;/strong&gt; R 之前必须先对其加 S 锁，&lt;strong&gt;读完&lt;/strong&gt;后即可释放 S 锁。解决读脏数据问题。&lt;/li&gt;
&lt;li&gt;三级封锁协议：&lt;strong&gt;一级封锁协议&lt;/strong&gt;加上事务 T 在&lt;strong&gt;读取数据&lt;/strong&gt; R 之前必须先对其加 S 锁，直到&lt;strong&gt;事务结束&lt;/strong&gt;才释放。解决不可重复读问题。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;串行化&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#串行化&#34;&gt;#&lt;/a&gt; 串行化&lt;/h2&gt;
&lt;p&gt;执行结果等价于串行调度的调度也是正确的，称为可串行化调度。一个给定的并发调度，当且仅当它是可串行化的才认为是正确调度。&lt;/p&gt;
&lt;p&gt;冲突操作：是指&lt;strong&gt;不同&lt;/strong&gt;的事务对&lt;strong&gt;同一&lt;/strong&gt;数据的&lt;strong&gt;读写&lt;/strong&gt;操作和&lt;strong&gt;写写&lt;/strong&gt;操作。涉及同一个数据库对象，并且至少有一个是写操作。&lt;/p&gt;
&lt;p&gt;不能交换的动作：同一事务的两个操作和不同事务的冲突操作。&lt;/p&gt;
&lt;p&gt;一个调度&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msub&gt;&lt;mi&gt;S&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;/msub&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;S_c&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.8333em;vertical-align:-0.15em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.05764em;&#34;&gt;S&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.1514em;&#34;&gt;&lt;span style=&#34;top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34;&gt;c&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 在保证冲突操作的次序不变的情况下，通过交换两个事务不冲突操作的次序得到另一个调度&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msup&gt;&lt;msub&gt;&lt;mi&gt;S&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;/msub&gt;&lt;msup&gt;&lt;mrow&gt;&lt;/mrow&gt;&lt;mo mathvariant=&#34;normal&#34; lspace=&#34;0em&#34; rspace=&#34;0em&#34;&gt;′&lt;/mo&gt;&lt;/msup&gt;&lt;/msup&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;{S_c}^{&#39;}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1.1657em;vertical-align:-0.15em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.05764em;&#34;&gt;S&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.1514em;&#34;&gt;&lt;span style=&#34;top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34;&gt;c&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:1.0157em;&#34;&gt;&lt;span style=&#34;top:-3.0157em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.5795em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.8278em;&#34;&gt;&lt;span style=&#34;top:-2.931em;margin-right:0.0714em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.5em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size3 size1 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;′&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;, 如果&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msup&gt;&lt;msub&gt;&lt;mi&gt;S&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;/msub&gt;&lt;msup&gt;&lt;mrow&gt;&lt;/mrow&gt;&lt;mo mathvariant=&#34;normal&#34; lspace=&#34;0em&#34; rspace=&#34;0em&#34;&gt;′&lt;/mo&gt;&lt;/msup&gt;&lt;/msup&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;{S_c}^{&#39;}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:1.1657em;vertical-align:-0.15em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.05764em;&#34;&gt;S&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.1514em;&#34;&gt;&lt;span style=&#34;top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34;&gt;c&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:1.0157em;&#34;&gt;&lt;span style=&#34;top:-3.0157em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.5795em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.8278em;&#34;&gt;&lt;span style=&#34;top:-2.931em;margin-right:0.0714em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.5em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size3 size1 mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;&lt;span class=&#34;mord mtight&#34;&gt;′&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 是串行的，称调度&lt;span class=&#34;katex&#34;&gt;&lt;span class=&#34;katex-mathml&#34;&gt;&lt;math xmlns=&#34;http://www.w3.org/1998/Math/MathML&#34;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msub&gt;&lt;mi&gt;S&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;/msub&gt;&lt;/mrow&gt;&lt;annotation encoding=&#34;application/x-tex&#34;&gt;S_c&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&#34;katex-html&#34; aria-hidden=&#34;true&#34;&gt;&lt;span class=&#34;base&#34;&gt;&lt;span class=&#34;strut&#34; style=&#34;height:0.8333em;vertical-align:-0.15em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;mord&#34;&gt;&lt;span class=&#34;mord mathnormal&#34; style=&#34;margin-right:0.05764em;&#34;&gt;S&lt;/span&gt;&lt;span class=&#34;msupsub&#34;&gt;&lt;span class=&#34;vlist-t vlist-t2&#34;&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.1514em;&#34;&gt;&lt;span style=&#34;top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;&#34;&gt;&lt;span class=&#34;pstrut&#34; style=&#34;height:2.7em;&#34;&gt;&lt;/span&gt;&lt;span class=&#34;sizing reset-size6 size3 mtight&#34;&gt;&lt;span class=&#34;mord mathnormal mtight&#34;&gt;c&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-s&#34;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;vlist-r&#34;&gt;&lt;span class=&#34;vlist&#34; style=&#34;height:0.15em;&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 是冲突可串行化的调度。&lt;/p&gt;
&lt;p&gt;冲突可串行化调度是可串行化调度的充分条件，不是必要条件。&lt;/p&gt;
&lt;h2 id=&#34;两段锁协议&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#两段锁协议&#34;&gt;#&lt;/a&gt; 两段锁协议&lt;/h2&gt;
&lt;p&gt;两段锁协议指所有事务必须分两个阶段对数据项加锁和解锁：在对任何数据进行读、写操作之前，事务首先要获得对该数据的封锁；在释放一个封锁之后，事务不再申请和获得任何其他封锁。&lt;/p&gt;
&lt;p&gt;两段锁协议的含义是指将事务分为两个阶段，第一阶段是获得封锁，也称为扩展阶段，事务可以申请获得任何数据项上的任何类型的锁，但是不能释放任何锁。第二阶段是释放封锁，也称为收缩阶段，事务可以释放任何数据项上的任何类型的锁，但是不能再申请任何锁。&lt;/p&gt;
&lt;p&gt;遵守两段锁协议，则一定是一个可串行化调度。事务遵守两段锁协议是可串行化调度的充分条件，而不是必要条件。&lt;/p&gt;
&lt;p&gt;遵守两段锁协议的事务可能会发生死锁。&lt;/p&gt;
&lt;h2 id=&#34;封锁的粒度&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#封锁的粒度&#34;&gt;#&lt;/a&gt; 封锁的粒度&lt;/h2&gt;
&lt;p&gt;封锁粒度与系统的并发度和并发控制的开销密切相关。&lt;/p&gt;
&lt;p&gt;对任一结点加基本锁，必须先对它的上层结点加意向锁。&lt;/p&gt;
&lt;p&gt;具有意向锁的多粒度封锁方法在申请封锁时应该按自上而下的次序进行，释放封锁时则应该按自下而上的次序进行。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://xingqiu-tuchuang-1256524210.cos.ap-shanghai.myqcloud.com/11606/360%E6%88%AA%E5%9B%BE20221105113011248.jpg&#34; alt=&#34;数据锁的相容矩阵&#34;&gt;&lt;/p&gt;
</content>
        <category term="计算机基础" />
        <category term="数据库" />
        <updated>2023-10-12T10:49:32.954Z</updated>
    </entry>
    <entry>
        <id>https://xiqin-huang.github.io/2023/10/12/bian-cheng/lan-qiao-bei-guo-sai-ti-mu/</id>
        <title>蓝桥杯国赛题目</title>
        <link rel="alternate" href="https://xiqin-huang.github.io/2023/10/12/bian-cheng/lan-qiao-bei-guo-sai-ti-mu/"/>
        <content type="html">&lt;p&gt;&lt;a href=&#34;https://blog.csdn.net/weixin_43919497/article/details/110011722?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522162261625316780264075413%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&amp;amp;request_id=162261625316780264075413&amp;amp;biz_id=0&amp;amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_v2~rank_v29-1-110011722.pc_search_result_before_js&amp;amp;utm_term=%E7%AC%AC%E5%8D%81%E4%B8%80%E5%B1%8A%E8%93%9D%E6%A1%A5%E6%9D%AFpython%E7%BB%84%E5%9B%BD%E8%B5%9B%E7%AD%94%E6%A1%88&amp;amp;spm=1018.2226.3001.4187&#34;&gt;CSDN 题解&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;美丽的 2&lt;br&gt;
 遍历即可，然后使用 str 和 count 函数就可以查找数字是否含有 2&lt;/li&gt;
&lt;li&gt;合数个数&lt;br&gt;
使用埃氏算法，就可以找到所有合数，然后使用 count 计算个数即可&lt;br&gt;
使用埃氏算法要小心一点，它是用于判断 n 以内的素数的，所以要注意是否需要加一。&lt;/li&gt;
&lt;li&gt;阶乘约数&lt;br&gt;
使用唯一分解定理：&lt;br&gt;
一个大于 1 的正整数 N，如果它的标准分解式为 N=p1a1+p2a2+…+pnan，那么它的正因数为（a1+1)(a2+1)…(an+1),&lt;br&gt;
 其中 pi 为素数（1 不为素数）&lt;br&gt;
我们首先将 2 到 100 中含有的素数找出来，然后存储在字典中，设置值为 1，然后由于 100 的阶乘太大了，我们从 2 开始到 100，分别用素数去尝试是否能够整除，可以的话就将字典对应的值加一，然后遍历字典的值，乘起来就是答案了。&lt;/li&gt;
&lt;li&gt;本质上升序列&lt;br&gt;
我们使用动态规划求解该题，后面开始遍历&lt;br&gt;
我们先将字符串翻转，使用 nums 记录以该字母开头的所有组合，然后我们遍历数组，如果是‘z’的话，将 nums [-1]=1，否则我们 nums [idx]=sum (nums [idx+1:]+1, 意思就是与该字母后面的所有有效的字母开头进行组合，加一是因为自己一个也可以作为一个序列。&lt;br&gt;
最后我们 sum（nums）即得答案&lt;/li&gt;
&lt;li&gt;玩具蛇&lt;br&gt;
使用深度优先遍历，设定 dfs 函数和 VIS 矩阵判断该点是否被访问过。如果被访问过就直接返回，没有则先判断长度是否已经足够，是的话直接计数器加一，返回，否则将该位置的访问位置置为 1，然后再向四个位置进行深度优先访问，全部完成后再将 VIS 矩阵对应位置置为 0（这一步很关键）。而且要注意在 Python 的子函数中加入 global 关键字修饰 ans 和 VIS 矩阵 global ans,vis; 然后遍历每个起点位置进行深度遍历即可。&lt;/li&gt;
&lt;li&gt;天干地支&lt;br&gt;
使用数组存储天干和地支，推出第 0 个元素是什么后，然后天干使用与 10 取余，地支与 12 取余即可，然后使用该索引即可&lt;/li&gt;
&lt;li&gt;重复字符串&lt;br&gt;
无法重复的情况只有一种：当字符串长度无法被 K 整除时。此时我们返回 - 1，其他情况我们直接根据 K 将其分组，然后在对应位置的统计元素个数，然后将其他不相同的元素改为出现次数最多的元素。使用这种贪心算法，我们就可以得到答案了。但是要注意 k=1 的时候直接将元素个数减去出现最多的元素出现个数即可。&lt;/li&gt;
&lt;li&gt;答疑&lt;br&gt;
看上去很麻烦，但其实，只要存储（离开 - 进入，发信息 - 进入）两个信息，然后使用贪心算法即可。&lt;/li&gt;
&lt;li&gt;补给&lt;br&gt;
不会&lt;/li&gt;
&lt;li&gt;蓝跳跳&lt;br&gt;
不会&lt;/li&gt;
&lt;/ol&gt;
</content>
        <category term="算法" />
        <category term="Python" />
        <category term="编程" />
        <updated>2023-10-12T10:49:32.922Z</updated>
    </entry>
    <entry>
        <id>https://xiqin-huang.github.io/2023/10/12/bian-cheng/bian-cheng-zhu-ji-qiao-en.ben-te-li-85/</id>
        <title>编程珠玑-乔恩.本特利-85</title>
        <link rel="alternate" href="https://xiqin-huang.github.io/2023/10/12/bian-cheng/bian-cheng-zhu-ji-qiao-en.ben-te-li-85/"/>
        <content type="html">&lt;ol&gt;
&lt;li&gt;减少程序的空间也会减少其运行时间。&lt;/li&gt;
&lt;li&gt;设计者确定其设计已经达到了完美的标准，不是不能再增加任何东西，而是不能再减少东西。&lt;/li&gt;
&lt;li&gt;他不能解决问题，是因为他企图解决错误的问题。问题的解决，是通过打破他的概念壁垒，进而去解决一个较简单的问题而实现的。&lt;/li&gt;
&lt;li&gt;恰当的数据视图实际上决定了程序的结构。&lt;/li&gt;
&lt;li&gt;程序员在考虑该问题时受到了语言的限制。&lt;/li&gt;
&lt;li&gt;正确性分析是自下而上进行的：从每个独立的代码行开始，检查它们是如何协同运作并解决问题的。&lt;/li&gt;
&lt;li&gt;总是保持对代码的正确理解，不要理会那种 “只要让程序工作，怎么改都行” 的催促。&lt;/li&gt;
&lt;li&gt;当他们编写程序的时候，“困难” 的部分第一次就可以正确运行，而那些 “容易” 的部分往往会出毛病。&lt;/li&gt;
&lt;li&gt;有时候，良好的问题定义可以避免用户对问题需求的过高估计。&lt;/li&gt;
&lt;li&gt;如果仅需要较小的加速，就对效果最佳的层面做改进。如果需要较大的加速，就对多个层面做改进。&lt;/li&gt;
&lt;li&gt;在进行粗略估算的时候，要切记爱因斯坦的名言：任何事都应尽量简单，但不宜过于简单。&lt;/li&gt;
&lt;li&gt;算法设计技术：保存状态，避免重复计算。将消息预处理至数据结构中，累加数组。&lt;/li&gt;
&lt;li&gt;C 程序员经常需要在性能和正确性之间折中，而 C++ 程序员却可以享受鱼与熊掌兼得的快乐。&lt;/li&gt;
&lt;li&gt;对于现代的计算机来说，将循环展开有助于避免管道阻塞，减少分支，增加指令级的并行性。&lt;/li&gt;
&lt;li&gt;代码调优的最重要原理就是尽量少用它。不成熟的优化是大量编程灾害的根源，它会危及程序的正确性、功能性以及可维护性。&lt;/li&gt;
&lt;li&gt;简单性可以延伸出功能性、健壮性以及速度和空间。&lt;/li&gt;
&lt;li&gt;使用指针来共享大型对象 (比如长文本字符串) 可以消除存储同一对象的众多副本所需的开销，但是程序员在修改共享对象时必须小心谨慎地确保该对象的所有拥有者都希望更改。&lt;/li&gt;
&lt;li&gt;一般来说，如果要从 r 个剩余的整数中选出 5 个，我们以概率 s/r 选择下一个数。&lt;/li&gt;
&lt;li&gt;很多程序员很快就发现问题的 “解决方案”，他们只愿意花 1 分钟的时间思考，然后花一天的时间来写代码，而不是先花 1 小时来思考，再用 1 小时来写代码。&lt;/li&gt;
&lt;li&gt;存储预先计算好的结果。对于开销较大的函数，可以只计算一次，然后将计算结果存储起来以减少开销。&lt;/li&gt;
&lt;li&gt;在数据结构的边界上放一个哨兵以减少测试是否已搜索结束的开销。&lt;/li&gt;
&lt;li&gt;在组织逻辑测试时，应该将低开销的、经常成功的测试放在高开销的，很少成功的测试前面。&lt;/li&gt;
&lt;/ol&gt;
</content>
        <category term="计算机基础" />
        <category term="算法" />
        <updated>2023-10-12T10:49:32.920Z</updated>
    </entry>
    <entry>
        <id>https://xiqin-huang.github.io/2023/10/12/bian-cheng/suan-fa-chang-yong-ji-qiao/</id>
        <title>算法常用技巧</title>
        <link rel="alternate" href="https://xiqin-huang.github.io/2023/10/12/bian-cheng/suan-fa-chang-yong-ji-qiao/"/>
        <content type="html">&lt;h1 id=&#34;数学&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#数学&#34;&gt;#&lt;/a&gt; 数学&lt;/h1&gt;
&lt;pre class=&#34;line-numbers language-markup&#34; data-language=&#34;markup&#34;&gt;&lt;code class=&#34;language-markup&#34;&gt;等差数列求和：Sn=(a1+an)*n/2;Sn=n*a1+d*(n-1)*n/2
等比数列求和：Sn=a1*(1-qn)/(1-q);Sn=(a1-an*q)/(1-q)
组合数学：A(n,m)=(n!)/(n-m)!;C(n,m)=A(n,m)/m!=(n!)/((n-m)!*m!&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;唯一分解定理&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;一个大于 1 的正整数 N，如果它的标准分解式为 N=p1a1+p2a2+…+pnan，那么它的正因数为（a1+1)(a2+1)…(an+1),&lt;br&gt;
 其中 pi 为素数（1 不为素数）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;斐波那契数公式&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Solution&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;fib&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; n&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
    sqrt5 &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;**&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0.5&lt;/span&gt;
    fibN &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;+&lt;/span&gt; sqrt5&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;**&lt;/span&gt; n &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; sqrt5&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;**&lt;/span&gt; n
&lt;span class=&#34;token keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;round&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;fibN &lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt; sqrt5&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;做题小技巧&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#做题小技巧&#34;&gt;#&lt;/a&gt; 做题小技巧&lt;/h1&gt;
&lt;p&gt;综合利用哈希表和前缀和可以解决连续子数组的问题。&lt;/p&gt;
&lt;p&gt;有时候通过将问题的值进行变换，可以将问题转化为一个我们已知的问题或较为简单的问题，例如将 0 替换成 - 1，这样就可以使用通过前缀和的知识点来解决子数组中有相同 0 和 1 的问题。&lt;/p&gt;
&lt;p&gt;子函数内使用 global 全局函数关键字&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;遍历的小技巧&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; i&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; w &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;token builtin&#34;&gt;enumerate&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;servers&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;：i表示索引，w为实际从server中取出来的值&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;常用函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#常用函数&#34;&gt;#&lt;/a&gt; 常用函数&lt;/h1&gt;
&lt;h2 id=&#34;集合&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#集合&#34;&gt;#&lt;/a&gt; 集合&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;函数&lt;/th&gt;
&lt;th&gt;作用&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;set1=set()&lt;/td&gt;
&lt;td&gt;创建集合&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;set1.add(6)&lt;/td&gt;
&lt;td&gt;增加元素&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;set1.remove(5)&lt;/td&gt;
&lt;td&gt;删除元素&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;字符串&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#字符串&#34;&gt;#&lt;/a&gt; 字符串&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;函数&lt;/th&gt;
&lt;th&gt;作用&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;find(sub)&lt;/td&gt;
&lt;td&gt;检测 sub 是否存在于字符串中，有则返回索引值，无则返回 - 1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;count(sub)&lt;/td&gt;
&lt;td&gt;判断 sub 在字符串中出现的次数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;isalnum()&lt;/td&gt;
&lt;td&gt;如果字符串至少有一个字符并且所有的字符都是字母或数字则返回 True，否则返回 False。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;isalpha()&lt;/td&gt;
&lt;td&gt;如果字符串至少有一个字符而且所有字符都是字母则返回 True，否则返回 false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;isdigit()&lt;/td&gt;
&lt;td&gt;如果字符串只包含数字则返回 True，否则返回 false&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;join()&lt;/td&gt;
&lt;td&gt;以字符串为分隔符，插入到 sub 中所有的字符之间 n=“”.join (n)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;replace(old,new[,count])&lt;/td&gt;
&lt;td&gt;把字符串中的 old 子字符串替换成 new 子字符串，如果 count 指定，则替换不超过 count 次&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;split(sep=None,maxsplit=-1)&lt;/td&gt;
&lt;td&gt;分隔字符串，默认按照空格作为分隔符切片字符串&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;splitlines()&lt;/td&gt;
&lt;td&gt;按照 “\n” 分隔，返回一个包含各行作为元素的列表&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;strip([chars])&lt;/td&gt;
&lt;td&gt;删除字符串前边和后边的所有空格，chars 参数可以定制删除的字符&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;数组&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#数组&#34;&gt;#&lt;/a&gt; 数组&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;函数&lt;/th&gt;
&lt;th&gt;作用&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;copy.deepcopy()&lt;/td&gt;
&lt;td&gt;深复制，真正的新建一个数组进行赋值，而不是传引用。使用前需要 import copy。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;clear()&lt;/td&gt;
&lt;td&gt;清空列表中的元素，留下一个空列表。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;append()&lt;/td&gt;
&lt;td&gt;向列表添加元素&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;extend()&lt;/td&gt;
&lt;td&gt;使用一个列表来拓展一个列表&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;remove（sub）&lt;/td&gt;
&lt;td&gt;删除 sub 元素&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;insert（num,index）&lt;/td&gt;
&lt;td&gt;在 index 处插入一个 num&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;pop（index）&lt;/td&gt;
&lt;td&gt;弹出 index 处元素&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;count（）&lt;/td&gt;
&lt;td&gt;计算出现次数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;index（）&lt;/td&gt;
&lt;td&gt;返回元素位置&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;reverse（）&lt;/td&gt;
&lt;td&gt;翻转列表&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sort（）&lt;/td&gt;
&lt;td&gt;排序&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;math库&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#math库&#34;&gt;#&lt;/a&gt; Math 库&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;函数&lt;/th&gt;
&lt;th&gt;作用&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;math.pow(x, y)&lt;/td&gt;
&lt;td&gt;返回 x 的 y 次方&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;math.ceil(x)&lt;/td&gt;
&lt;td&gt;返回不小于 x 的整数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;math.fabs(x)&lt;/td&gt;
&lt;td&gt;返回 x 的绝对值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;math.floor(x)&lt;/td&gt;
&lt;td&gt;返回不大于 x 的整数&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;math.fsum([x, y, …])&lt;/td&gt;
&lt;td&gt;返回无损精度的和&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;math.sqrt(x)&lt;/td&gt;
&lt;td&gt;返回 x 的平方根&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;其他&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#其他&#34;&gt;#&lt;/a&gt; 其他&lt;/h1&gt;
&lt;h2 id=&#34;datatime&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#datatime&#34;&gt;#&lt;/a&gt; datatime&lt;/h2&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;date&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;isocalendar&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;        &lt;span class=&#34;token comment&#34;&gt;#返回结果是三元组(年号，第几周，第几天)&lt;/span&gt;
date&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;strftime&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;%j&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;        &lt;span class=&#34;token comment&#34;&gt;#计算输入的日期是一年中的第几天&lt;/span&gt;
end&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;datetime&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;datetime&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;year&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2020&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;month&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;day&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
dela&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;datetime&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;timedelta&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;days&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt; start&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;day&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;or&lt;/span&gt; start&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;weekday&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;#月初或周一&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;优先队列&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#优先队列&#34;&gt;#&lt;/a&gt; 优先队列&lt;/h2&gt;
&lt;p&gt;优先队列是按照递增进行排列的，弹出的数据是最小的元素，如果想让其递减的排列，可以在前面乘一个 - 1.&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;import&lt;/span&gt; heapq     &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt;导入库函数
heapq&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;heapify&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;nums&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;     &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt;将数组转化为优先队列
heapq&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;heappush&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;nums&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;     &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt;往优先队列中插入元素
num&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;heapq&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;heappop&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;nums&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;     &lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt;从优先队列中取出元素&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;类的声明&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#类的声明&#34;&gt;#&lt;/a&gt; 类的声明&lt;/h2&gt;
&lt;pre class=&#34;line-numbers language-python&#34; data-language=&#34;python&#34;&gt;&lt;code class=&#34;language-python&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;token class-name&#34;&gt;Potato&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;#声明类名&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;__init__&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;name&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;#声明构造方法，self用于在类中传递各种属性&lt;/span&gt;
          self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;name&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;name
    &lt;span class=&#34;token keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;kick&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;
          &lt;span class=&#34;token keyword&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;我叫%s。&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;%&lt;/span&gt;self&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;name&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
</content>
        <category term="算法" />
        <category term="Python" />
        <category term="编程" />
        <updated>2023-10-12T10:49:32.918Z</updated>
    </entry>
    <entry>
        <id>https://xiqin-huang.github.io/2023/10/12/bian-cheng/shu-ju-ku-lian-xi/</id>
        <title>数据库练习</title>
        <link rel="alternate" href="https://xiqin-huang.github.io/2023/10/12/bian-cheng/shu-ju-ku-lian-xi/"/>
        <content type="html">&lt;h2 id=&#34;牛客&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#牛客&#34;&gt;#&lt;/a&gt; 牛客&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;like 表示模糊查找&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;浮点数的平均值可能小数点位数很多，按照示例保存一位小数，用 round 函数&lt;/p&gt;
&lt;p&gt;多个条件进行分组： &lt;code&gt;group by university,gender;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;where 在 group by 前执行，所以需要用 having，而 order by 在 group by 后，所以可以不用 having。&lt;/p&gt;
&lt;p&gt;每张表都需要有别名&lt;/p&gt;
&lt;p&gt;多个条件判断： &lt;code&gt;case when then&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;日期函数 day () 取日，month () 取月份，datediff 求两个日期之间的差&lt;/p&gt;
&lt;h3 id=&#34;常见例题&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#常见例题&#34;&gt;#&lt;/a&gt; 常见例题&lt;/h3&gt;
&lt;p&gt;年龄在 20 到 23 之间： &lt;code&gt;SELECT device_id,gender,age from user_profile where age between 20 and 23&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;用 where 过滤空值练习： &lt;code&gt;select device_id,gender,age,university from user_profile where age is not null;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;查看学校名称中含北京的用户： &lt;code&gt;select device_id,age,university from user_profile where university like &#39;%北京%&#39;;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;统计每个学校的答过题的用户的平均答题数：首先构造出一张以 device_id 为分组的表，然后以该表为主表，进行链接，然后根据学校进行分组，使用 sum 和 count（1）即可，或者  &lt;code&gt;(count(question_id)/count(distinct(qpd.device_id)))&lt;/code&gt;  直接使用 count&lt;br&gt;
SELECT DISTINCT Company FROM Orders： distinct 关键字表示只取一次，去重&lt;br&gt;
结果不去重只需 union all 将两张表连接在一起。&lt;/p&gt;
&lt;p&gt;选取文本中的最右的元素： &lt;code&gt;substring_index(profile,&#39;,&#39;,-1)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;查找倒数第二个元素需要两层： &lt;code&gt;SUBSTRING_INDEX(SUBSTRING_INDEX(profile,&#39;,&#39;,-2),&#39;,&#39;,1)AS age;&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;day1&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#day1&#34;&gt;#&lt;/a&gt; day1&lt;/h2&gt;
&lt;h3 id=&#34;字符串&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#字符串&#34;&gt;#&lt;/a&gt; 字符串&lt;/h3&gt;
&lt;p&gt;verchar 和 char 的区别：verchar 存储时变长，最多容纳 65535 个字节；char 固定长度，最多容纳 255 个字符。&lt;/p&gt;
&lt;p&gt;在配置文件（my.cnf）中加入如下配置： &lt;code&gt;sql-mode=&#34;NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION&#34;&lt;/code&gt;  保存并重启即可进入非严格模式&lt;/p&gt;
&lt;p&gt;长的文本：text&lt;/p&gt;
&lt;p&gt;创建表： &lt;code&gt;create table L3(id int not null primary key auto_increment,name varchar(5),depart char(3))default charset=utf8;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;插入元素： &lt;code&gt;insert into L3(name,depart) values(&#34;alex&#34;,&#34;sb&#34;);&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;增删改查&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#增删改查&#34;&gt;#&lt;/a&gt; 增删改查&lt;/h3&gt;
&lt;p&gt;新增数据： &lt;code&gt;insert into L2(salary) values(5.289);&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;删除数据： &lt;code&gt;delete from L3 where name=&#34;alex&#34; and id=1;&lt;/code&gt;  。删除 name=alex 的数据，and 链接多个条件&lt;/p&gt;
&lt;p&gt;更新数据： &lt;code&gt;update L2 set salary=1.99 where id=1;&lt;/code&gt; 。 &lt;code&gt;update L3 set name=concat(name,&#34;3&#34;) where id=2；&lt;/code&gt;  。PS：concat 函数用于拼接字符串&lt;/p&gt;
&lt;p&gt;查找数据： &lt;code&gt;select id,name from L3 where id=2;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;显示一列标题为 age 的 111： &lt;code&gt;select id,name,111 as age from L3;&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;小数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#小数&#34;&gt;#&lt;/a&gt; 小数&lt;/h3&gt;
&lt;p&gt;decimal (8,2) 表示数字位有 8 位（不包含负号），小数位保留 2 位。&lt;/p&gt;
&lt;p&gt;小数位数过多会自动四舍五入，整数部分超过会报错&lt;/p&gt;
&lt;p&gt;插入元素： &lt;code&gt;insert into L2(salary) values(5.289);&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;新建表： &lt;code&gt;create table L2(id int not null primary key auto_increment,salary decimal(8,2))default charset=utf8;&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;时间&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#时间&#34;&gt;#&lt;/a&gt; 时间&lt;/h3&gt;
&lt;p&gt;timestamp 和 datetime 相比：除了表示的范围更小外，所存储的方式也不同，是根据当前时区再进行转换，而 datetime 是直接存储。&lt;/p&gt;
&lt;p&gt;此外还有 date 和 time&lt;/p&gt;
&lt;p&gt;创建表： &lt;code&gt;create table L5(id int not null primary key auto_increment,dt datetime,tt timestamp)default charset=utf8;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;插入表： &lt;code&gt;insert into L5(dt,tt) values(&#34;2025-11-11 11:11:14&#34;,&#34;2025-11-11 11:11:14&#34;);&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;今日总结&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#今日总结&#34;&gt;#&lt;/a&gt; 今日总结&lt;/h3&gt;
&lt;p&gt;修改表： &lt;code&gt;alter table L6 add amount decimal(10,2) default 0 not null;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;删除表： &lt;code&gt;alter table L6 drop aaa;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;插入记录： &lt;code&gt;insert into L6(name,password,gender,email,crime,amount) values(&#34;xiqin4&#34;,&#34;dsasa&#34;,0,&#34;7444545@qq.com&#34;,&#34;2020-7-1 11:11:14&#34;,100);&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;更新记录： &lt;code&gt;update L6 set gender=1 where id&amp;gt;3;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;查看： &lt;code&gt;select * from L6 where amount&amp;gt;1000;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;更新： &lt;code&gt;update L6 set amount=amount+1000;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;删除： &lt;code&gt;delete from L6 where gender=1;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;创建表：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-mysql&#34; data-language=&#34;mysql&#34;&gt;&lt;code class=&#34;language-mysql&#34;&gt;create table L6(
    id int not null primary key auto_increment,
    name varchar(32) not null,
    password varchar(64) not null,
    gender char(2) check(gender in (0,1)),
    email varchar(64),
    crime datetime
)default charset=utf8;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;day2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#day2&#34;&gt;#&lt;/a&gt; day2&lt;/h2&gt;
&lt;h3 id=&#34;左右连表&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#左右连表&#34;&gt;#&lt;/a&gt; 左右连表&lt;/h3&gt;
&lt;p&gt;以 info 作为主表，将 depart 进行左链接，根据 depart.id 进行： &lt;code&gt;select * from info left outer join depart on info.depart_id = depart.id;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;指定选中的数据进行展示： &lt;code&gt;select info.id,info.name,info.email,depart.title from info left outer join depart on info.depart_id = depart.id;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;将 left 改成 right 就是右链接： &lt;code&gt;select info.id,info.name,info.email,depart.title from info right outer join depart on info.depart_id = depart.id;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;从表 right outer join 主表 on &lt;a href=&#34;http://xn--tiq313l.x=%E4%BB%8E%E8%A1%A8.id&#34;&gt;主表.x = 从表.id&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;当主表中存在从表中没有的信息，则会产生区别；&lt;/p&gt;
&lt;p&gt;简写 outer 可以省略&lt;/p&gt;
&lt;p&gt;内链接：两张表进行链接，没有分主从，根据条件进行匹配：select * from info inner join depart on info.depart_id = &lt;a href=&#34;http://depart.id&#34;&gt;depart.id&lt;/a&gt;;&lt;/p&gt;
&lt;h3 id=&#34;指定列映射&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#指定列映射&#34;&gt;#&lt;/a&gt; 指定列（映射）&lt;/h3&gt;
&lt;p&gt;帮 name 写别名 NM，并新增一列 123： &lt;code&gt;select id,name as NM,123 from info ;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;条件语句： &lt;code&gt;select id,name,case when age&amp;lt;18 then &#34;少年&#34; when age&amp;lt;30 then &#34;青年&#34; else &#34;老年&#34; end v6 from info;&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;用户授权管理&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#用户授权管理&#34;&gt;#&lt;/a&gt; 用户授权管理&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;用户&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;查看用户信息： &lt;code&gt;select user,authentication_string,host from mysql.user;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;查看用户和权限信息： &lt;code&gt;desc mysql.user;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;新建用户： &lt;code&gt;create user &#39;用户名&#39;@&#39;连接者的IP地址&#39; identified by &#39;密码&#39;&lt;/code&gt;  。PS：&#39;&#39; 号可加可不加&lt;/li&gt;
&lt;li&gt;&lt;code&gt;create user xiqin@127.0.0.1 identified by &#39;159123zxc&#39;&lt;/code&gt;  。解析：127.0.0.%：% 意味可以匹配任何值；地址为 % 意味所有地址都可以&lt;/li&gt;
&lt;li&gt;删除用户： &lt;code&gt;drop user xiqin@127.0.0.1;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;修改用户： &lt;code&gt;rename user &#39;xiqin&#39;@&#39;127.0.0.1&#39; to &#39;huangyuqin&#39;@&#39;localhost&#39;;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;修改密码： &lt;code&gt;set password for &#39;huangyuqin&#39;@&#39;localhost&#39;=Password(&#39;123123&#39;);&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;授权&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;grant 权限 on 数据库。表 to ‘用户’@‘IP 地址’;&lt;/li&gt;
&lt;li&gt;给用户 huangyuqin 用有数据库 day26db 中 info 表的查找和插入权限： &lt;code&gt;grant select,insert on day26db.info to &#39;huangyuqin&#39;@&#39;localhost&#39;;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;给用户 huangyuqin 拥有数据库的所有权限： &lt;code&gt;grant all privileges on *.* to &#39;huangyuqin&#39;@&#39;localhost&#39;;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;此时还没有真正生效，输入： &lt;code&gt;flush privileges;&lt;/code&gt;  。将数据读入内存，从而立即生效。&lt;/li&gt;
&lt;li&gt;选择不同的用户进行登录： &lt;code&gt;&#34;C:\Program Files\mysql-5.7.31-winx64\bin\mysql.exe&#34; -h 127.0.0.1 -P 3306 -u huangyuqin -p&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;查看授权： &lt;code&gt;show grants for &#39;huangyuqin&#39;@&#39;localhost&#39;;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;取消授权： &lt;code&gt;revoke INSERT on day26db.info from &#39;huangyuqin&#39;@&#39;localhost&#39;;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;需要在管理员权限下使用&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;通配符&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#通配符&#34;&gt;#&lt;/a&gt; 通配符&lt;/h3&gt;
&lt;p&gt;通配符主要用于模糊查找：&lt;/p&gt;
&lt;p&gt;% 号表示 n 个字符，可以为 0 个： &lt;code&gt;select * from info where name like &#34;%明%&#34;;&lt;/code&gt; _号表示一个字符： &lt;code&gt;select * from info where name like &#34;_明%&#34;;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;注意：数据少时可以使用，数据量大时不要使用，因为效率很低。&lt;/p&gt;
&lt;h3 id=&#34;上下连表和取部分&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#上下连表和取部分&#34;&gt;#&lt;/a&gt; 上下连表和取部分&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;select id,title from depart union select id,name from info;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;列数需相同，会自动去重。union all 则不去重&lt;/p&gt;
&lt;p&gt;获取前五条数据：select * from info limit 5;&lt;/p&gt;
&lt;p&gt;从位置 2 开始，向后获取前 5 条数据： &lt;code&gt;select * from info limit 3 offset 2;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;可以用于分页显示&lt;/p&gt;
&lt;h3 id=&#34;排序和分组&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#排序和分组&#34;&gt;#&lt;/a&gt; 排序和分组&lt;/h3&gt;
&lt;p&gt;desc 倒序排列，顺序排列，通常是得到结果再进行排序&lt;/p&gt;
&lt;p&gt;优先按照 age 从小到大，age 相等则 id 从大到小： &lt;code&gt;select * from info order by age asc,id desc;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;将 age 相同的进行分组，遇到需要取舍的时候，选择 ID 更大的，同理还可以替换成 max (id),min (id),count (id),sum (id),avg (id)：select age,count (1) from info group by age;&lt;/p&gt;
&lt;p&gt;对已经分组的数组，取其中 2 个以上的分组： &lt;code&gt;select depart_id,count(id) from info group by depart_id having count(id)&amp;gt;2;&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;表关系&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#表关系&#34;&gt;#&lt;/a&gt; 表关系&lt;/h3&gt;
&lt;p&gt;约束 depart_id 和 depart 中的 id，用于初始化的时候： &lt;code&gt;constraint fk_info_depart foreign key (depart_id) reference depart(id);&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;表结构已创建，额外增加外键： &lt;code&gt;alter table info add constraint fk_info_depart foreign key info(depart_id) references depart(id);&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;删除外键： &lt;code&gt;alter table info drop foreign key fk_info_depart;&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;sql语句优先级&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#sql语句优先级&#34;&gt;#&lt;/a&gt; SQL 语句优先级&lt;/h3&gt;
&lt;p&gt;优先级从高到低：join-&amp;gt;on-&amp;gt;where-&amp;gt;group by-&amp;gt;having-&amp;gt;order by-&amp;gt;limit&lt;/p&gt;
&lt;p&gt;例子： &lt;code&gt;select age,count(id) from info where id&amp;gt;2 group by age having count(id)&amp;gt;1 order by age desc limit 1;&lt;/code&gt;&lt;/p&gt;
&lt;h2 id=&#34;day3&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#day3&#34;&gt;#&lt;/a&gt; day3&lt;/h2&gt;
&lt;h3 id=&#34;表的数据的导入和导出&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#表的数据的导入和导出&#34;&gt;#&lt;/a&gt; 表的数据的导入和导出&lt;/h3&gt;
&lt;p&gt;先判断是否存在，再进行删除： &lt;code&gt;drop database if exist day27db;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;导入文件：注意斜杠： &lt;code&gt;source /Users/86136/Desktop/数据库/第三天/day27db.sql;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;只能导入数据表，不能插入数据，不知道是什么问题，可能是主键导致的问题，暂时先不处理&lt;/p&gt;
&lt;p&gt;查询姓李的老师个数： &lt;code&gt;select * from teacher where tname like &#39;李%&#39;;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;查询男生和女生的人数： &lt;code&gt;select gender,count(1) from student group by gender;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;查询 “三年二班” 的所有学生： &lt;code&gt;select * from student left join class on student.class_id = class.cid where class.caption=&#39;三年二班&#39;;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;查询每个班级的班级名称、班级人数： &lt;code&gt;select class.caption,count(1) from student left join class on student.class_id=class.cid group by class.caption;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;查询平均成绩大于 60 的所有学生的学号、平均成绩、姓名： &lt;code&gt;select student_id,avg(num) from score group by student_id having avg(num)&amp;gt;60;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;查询成绩小于 60 分的同学学号、姓名、成绩、课程名称：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-mysql&#34; data-language=&#34;mysql&#34;&gt;&lt;code class=&#34;language-mysql&#34;&gt;select student.sid,student.sname,score.num,course.cname from score 
left join student on score.student_id=student.sid 
left join course on score.course_id=course.cid 
where num&amp;lt;60;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;查询各科成绩的总分、最高分、最低分、平均分，显示课程 ID、课程名称、总分、最高分、最低分：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-mysql&#34; data-language=&#34;mysql&#34;&gt;&lt;code class=&#34;language-mysql&#34;&gt;select course_id,course.cname,sum(num),max(num),min(num),avg(num) from score 
left join course on score.course_id=course.cid 
group by course_id 
order by avg(num) desc;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;查询各科成绩的平均分和及格率，显示：课程 ID、课程名称、平均分、及格率：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-mysql&#34; data-language=&#34;mysql&#34;&gt;&lt;code class=&#34;language-mysql&#34;&gt;select course_id,course.cname,avg(num),count(1) as total,
sum(case when score.num &amp;gt; 60 then 1 else 0 end) as jige from score 
left join course on score.course_id =course.cid 
group by course_id;

select course_id,course.cname,avg(num),
sum(case when score.num &amp;gt; 60 then 1 else 0 end)/count(1)*100 as prescent from score 
left join course on score.course_id =course.cid 
group by course_id;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;三个表依次连在一起：查询 “三年二班” 每个学生的学号、姓名、总成绩、平均成绩：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-mysql&#34; data-language=&#34;mysql&#34;&gt;&lt;code class=&#34;language-mysql&#34;&gt;select student_id,sname,sum(num),avg(num) from score 
left join student on score.student_id=student.sid 
left join class on class.cid=student.class_id 
where class.caption=&#39;三年二班&#39; 
group by student_id;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;查询学过 “波多” 老师课的同学的学号，姓名：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-mysql&#34; data-language=&#34;mysql&#34;&gt;&lt;code class=&#34;language-mysql&#34;&gt;select student.sid,student.sname from score 
left join student on score.student_id=student.sid 
left join course on score.course_id=course.cid 
left join teacher on course.teacher_id=teacher.tid 
where teacher.tname=&#39;波多&#39;;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;查询没学过’波多’老师课的同学的学号，姓名（应该是选择先查询选过的同学的 ID，再进行排除，而不是直接使用！=）：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-mysql&#34; data-language=&#34;mysql&#34;&gt;&lt;code class=&#34;language-mysql&#34;&gt;select * from student 
where sid not in(select student.sid from score 
left join student on score.student_id=student.sid 
left join course on score.course_id=course.cid 
left join teacher on course.teacher_id=teacher.tid 
where teacher.tname=&#39;波多&#39;);&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;查询选修‘苍空’老师所授课程的学生中，成绩最高的学生姓名及其成绩（考虑并列）不考虑并列只需使用到 order by 和 limit：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-mysql&#34; data-language=&#34;mysql&#34;&gt;&lt;code class=&#34;language-mysql&#34;&gt;select student.sid,student.sname from score 
left join student on score.student_id =student.sid 
left join course on score.course_id=course.cid 
left join teacher on course.teacher_id=teacher.tid 
where teacher.tname=&#39;苍空&#39; 
and score.num=(select max(num) from score 
left join course on score.course_id=course.cid 
left join teacher on course.teacher_id=teacher.tid 
where teacher.tname=&#39;苍空&#39;);&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;查询选修了所有课程的学生的学号，姓名：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-mysql&#34; data-language=&#34;mysql&#34;&gt;&lt;code class=&#34;language-mysql&#34;&gt;select student.sid,student.sname from score 
left join student on score.student_id=student.sid 
group by student_id having count(1)=(select count(1) from course);&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;查询选修了 “生物” 和 “物理” 课程的所有学生学号，姓名：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-mysql&#34; data-language=&#34;mysql&#34;&gt;&lt;code class=&#34;language-mysql&#34;&gt;select student.sid,student.sname from score 
left join course on score.course_id=course.cid 
left join student on score.student_id=student.sid 
where course.cname in (&#39;生物&#39;,&#39;物理&#39;) 
group by student_id having count(1)=2;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;查询至少有一门课与学号为 1 的学生所选的课程相同的其他学生学号和姓名：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-mysql&#34; data-language=&#34;mysql&#34;&gt;&lt;code class=&#34;language-mysql&#34;&gt;select student.sid,student.sname from score 
left join course on score.course_id=course.cid 
left join student on score.student_id=student.sid 
where score.course_id in (select course_id from score where student_id=1) and score.student_id!=1 
group by student_id having count(1)&amp;gt;1;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;查询 “生物” 比 “物理” 成绩高的所有学生的学号：PS：这里好像有点问题，存在没有该课成绩的情况，应该先选出同时有生物和物理成绩的同学&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-mysql&#34; data-language=&#34;mysql&#34;&gt;&lt;code class=&#34;language-mysql&#34;&gt;select student_id,max(case cname when &#34;生物&#34; then num else -1 end) as sw,
max(case cname when &#34;物理&#34; then num else -1 end) as wl from score 
left join course on score.course_id=course.cid 
where cname in (&#34;生物&#34;,&#34;物理&#34;) 
group by student_id having sw&amp;gt;wl;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;将一张表中的数据插入到另一张表中：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-mysql&#34; data-language=&#34;mysql&#34;&gt;&lt;code class=&#34;language-mysql&#34;&gt;insert into sc select * from score;
insert into sc (student_id,course_id,num) 
select sid,2,80 from student 
where sid not in (select student_id from score where course_id=2);&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;day4&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#day4&#34;&gt;#&lt;/a&gt; day4&lt;/h2&gt;
&lt;h3 id=&#34;执行计划&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#执行计划&#34;&gt;#&lt;/a&gt; 执行计划&lt;/h3&gt;
&lt;p&gt;MySQL 中提供了执行计划，让你能够预判 SQL 的执行（只能给到一定的参考，不一定完全能预判准确）。&lt;/p&gt;
&lt;p&gt;explain 关键字&lt;/p&gt;
&lt;p&gt;主要看输出结果中的 type,all 表示进行了全表扫描，而 ref 则是通过索引进行查找&lt;/p&gt;
&lt;p&gt;性能从低到高排序：all &amp;lt; index &amp;lt; range &amp;lt; index_merge &amp;lt; ref_or_null &amp;lt; ref &amp;lt; eq_ref &amp;lt; system/const&lt;/p&gt;
&lt;h3 id=&#34;无法命中索引的情况&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#无法命中索引的情况&#34;&gt;#&lt;/a&gt; 无法命中索引的情况&lt;/h3&gt;
&lt;p&gt;类型不一致：例如数据库中是字符串类型，却传入数字进行查找；主键比较特殊，即使类型不一致也不影响&lt;/p&gt;
&lt;p&gt;使用了不等于，特殊的主键 or，当 or 条件要未建立的列时失效，但当后面有 and 有建立索引的列时比较生效&lt;/p&gt;
&lt;p&gt;排序，当根据索引排序时候，选择的映射如果不是索引，则不走索引。特殊的主键 like 进行模糊匹配，只有在通配符在最后面才有效&lt;/p&gt;
&lt;p&gt;联合索引要满足最左前缀&lt;/p&gt;
&lt;p&gt;使用函数，例如 reverse（）, 放在后面才可以，例如&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;未命中： &lt;code&gt;select * from big where reverse(name) = &#34;wupeiqi&#34;;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;命中： &lt;code&gt;select * from big where name = reverse(&#34;wupeiqi&#34;);&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;索引&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#索引&#34;&gt;#&lt;/a&gt; 索引&lt;/h3&gt;
&lt;p&gt;使用索引是为了加速查找，为什么可以加速查找是因为索引是按照 B + 树的方式进行存储的&lt;/p&gt;
&lt;p&gt;引擎的不同会对索引的产生区别：myisam 是数据和索引结构分开存储；innodb 是数据和主键索引结构存储在一起&lt;/p&gt;
&lt;p&gt;建表时可以进行指定 engine=myisam&lt;/p&gt;
&lt;p&gt;查看数据表引擎类型： &lt;code&gt;show create table class;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;innodb 是默认索引，使用更为方便&lt;/p&gt;
&lt;p&gt;常见索引&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;主键索引：加速查找、不能为空不能重复。&lt;/li&gt;
&lt;li&gt;唯一索引：加速查找，不能重复，可以为空，但只能一个为空，不然会视为重复。&lt;/li&gt;
&lt;li&gt;普通索引：加速查找。都可以进行联合索引&lt;/li&gt;
&lt;li&gt;联合索引的意思是多列连接起来作为一个键&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;主键索引&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-mysql&#34; data-language=&#34;mysql&#34;&gt;&lt;code class=&#34;language-mysql&#34;&gt;primary key关键字
create table 表名(
    id int not null auto_increment,
    name varchar(32) not null,
    primary key(列1,列2)          -- 如果有多列，称为联合主键（不常用且myisam引擎支持）
);
新增主键索引：alter table 表名 add primary key(列名);
删除主键索引：alter table 表名 drop primary key;
自增列一定要是键，即索引，索引删除时可能会报错，此时改为使用alter table 表 change id id int not null;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;唯一索引：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-mysql&#34; data-language=&#34;mysql&#34;&gt;&lt;code class=&#34;language-mysql&#34;&gt;unique关键字
create table 表名(
    id int not null auto_increment,
    name varchar(32) not null,
    unique (列1,列2)               -- 如果有多列，称为联合唯一索引。
);
新建create unique index 索引名 on 表名(列名);
删除drop unique index 索引名 on 表名;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;普通索引：&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-mysql&#34; data-language=&#34;mysql&#34;&gt;&lt;code class=&#34;language-mysql&#34;&gt;index
create table 表名(
    id int not null auto_increment primary key,
    name varchar(32) not null,
    email varchar(64) not null,
    index ix_email (name,email)     -- 如果有多列，称为联合索引。
);
新增create index 索引名 on 表名(列名);
删除drop index 索引名 on 表名;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;视图&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#视图&#34;&gt;#&lt;/a&gt; 视图&lt;/h3&gt;
&lt;p&gt;视图其实是一个虚拟表（非真实存在），其本质是【根据 SQL 语句获取动态的数据集，并为其命名】，用户使用时只需使用【名称】即可获取结果集，并可以将其当作表来使用，类似使用一个 temp 变量方便使用。&lt;/p&gt;
&lt;p&gt;创建视图： &lt;code&gt;create view v1 as select id,name from d1 where id&amp;gt;1;&lt;/code&gt;  。然后可以当作一张表进行使用&lt;/p&gt;
&lt;p&gt;修改视图： &lt;code&gt;alter view v1 as SQL语句&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;基于视图只能查询，针对视图不能执行 增加、修改、删除。 如果源表发生变化，视图表也会发生变化。&lt;/p&gt;
&lt;h3 id=&#34;函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#函数&#34;&gt;#&lt;/a&gt; 函数&lt;/h3&gt;
&lt;p&gt;字符串拼接： &lt;code&gt;select concat(&#39;alex&#39;,&#39;sb&#39;);&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;休眠 1 秒： &lt;code&gt;select sleep(1);&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;自定义函数：先将‘;’转换为美元符号，放在遇到；就自动结束了&lt;/p&gt;
&lt;p&gt;执行函数： &lt;code&gt;select f1(11,22);&lt;/code&gt;  。 &lt;code&gt;select f1(11,id),name from d1;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;删除函数： &lt;code&gt;drop function f1;&lt;/code&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-mysql&#34; data-language=&#34;mysql&#34;&gt;&lt;code class=&#34;language-mysql&#34;&gt;delimiter $$
create function f1(
    i1 int,
    i2 int)
returns int
BEGIN
    declare num int;
    declare maxId int;
    select max(id) from big into maxId;
    set num = i1 + i2 + maxId;
    return(num);
END $$
delimiter ;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;存储过程&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#存储过程&#34;&gt;#&lt;/a&gt; 存储过程&lt;/h3&gt;
&lt;p&gt;事务，成功都成功，失败都失败。&lt;/p&gt;
&lt;p&gt;存储过程，是一个存储在 MySQL 中的 SQL 语句集合，当主动去调用存储过程时，其中内部的 SQL 语句会按照逻辑执行。&lt;/p&gt;
&lt;p&gt;rollback 进行回滚&lt;/p&gt;
&lt;p&gt;创建存储过程&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-mysql&#34; data-language=&#34;mysql&#34;&gt;&lt;code class=&#34;language-mysql&#34;&gt;delimiter $$
create procedure p1()
BEGIN
    select * from d1;
END $$
delimiter ;
执行存储过程：call p1();
&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;触发器&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#触发器&#34;&gt;#&lt;/a&gt; 触发器&lt;/h3&gt;
&lt;p&gt;对某个表进行【增 / 删 / 改】操作的前后如果希望触发某个特定的行为时，可以使用触发器。&lt;/p&gt;
&lt;p&gt;NEW 表示新数据，可以在里面直接进行使用。同理，old 表示原来的数据。&lt;/p&gt;
&lt;p&gt;创建触发器&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-mysql&#34; data-language=&#34;mysql&#34;&gt;&lt;code class=&#34;language-mysql&#34;&gt;create trigger
例句：
CREATE TRIGGER tri_before_insert_tb1 BEFORE INSERT ON tb1 FOR EACH ROW
BEGIN
    ...
END&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;day5&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#day5&#34;&gt;#&lt;/a&gt; day5&lt;/h2&gt;
&lt;h3 id=&#34;锁&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#锁&#34;&gt;#&lt;/a&gt; 锁&lt;/h3&gt;
&lt;p&gt;MySQL 中自带了锁的功能，可以帮助我们实现开发过程中遇到的同时处理数据的情况。&lt;/p&gt;
&lt;p&gt;MYISAM 支持表锁，不支持行锁；InnoDB 引擎支持行锁和表锁。&lt;/p&gt;
&lt;p&gt;在 innodb 引擎中，update、insert、delete 的行为内部都会先申请锁（排它锁），申请到之后才执行相关操作，最后再释放锁。&lt;/p&gt;
&lt;p&gt;select 默认不加锁，需要配合事务 + 特殊语法进行加锁&lt;/p&gt;
&lt;p&gt;对于数据库中的锁，从锁的范围来讲有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;表级锁，即 A 操作表时，其他人对整个表都不能操作，等待 A 操作完之后，才能继续。&lt;/li&gt;
&lt;li&gt;行级锁，即 A 操作表时，其他人对指定的行数据不能操作，其他行可以操作，等待 A 操作完之后，才能继续。&lt;/li&gt;
&lt;li&gt;for update 排他锁：&lt;pre class=&#34;line-numbers language-mysql&#34; data-language=&#34;mysql&#34;&gt;&lt;code class=&#34;language-mysql&#34;&gt;begin; 
    select * from L1 where name=&#34;武沛齐&#34; for update;    -- name列不是索引（表锁）
commit;
select * from L1 where id=1 for update;              -- id列是索引（行锁）&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;lock in share mode 共享锁，其他可读但不可写&lt;pre class=&#34;line-numbers language-mysql&#34; data-language=&#34;mysql&#34;&gt;&lt;code class=&#34;language-mysql&#34;&gt;begin; 
    select * from L1 where name=&#34;武沛齐&#34; lock in share mode;    -- 假设name列不是索引（表锁）
commit;
使数据按字典格式cursor = conn.cursor(pymysql.cursors.DictCursor)&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;事务&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#事务&#34;&gt;#&lt;/a&gt; 事务&lt;/h3&gt;
&lt;p&gt;四大特性：原子性、一致性、隔离性、持久性。&lt;/p&gt;
&lt;p&gt;开启事务：begin; 或者 start transaction;&lt;/p&gt;
&lt;p&gt;提交事务：commit;&lt;/p&gt;
&lt;p&gt;回滚：rollback;&lt;/p&gt;
</content>
        <category term="数据库" />
        <category term="MySQL" />
        <updated>2023-10-12T10:49:32.916Z</updated>
    </entry>
    <entry>
        <id>https://xiqin-huang.github.io/2023/10/12/bian-cheng/wei-xin-yun-kai-fa/</id>
        <title>微信云开发</title>
        <link rel="alternate" href="https://xiqin-huang.github.io/2023/10/12/bian-cheng/wei-xin-yun-kai-fa/"/>
        <content type="html">&lt;h1 id=&#34;day1&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#day1&#34;&gt;#&lt;/a&gt; day1&lt;/h1&gt;
&lt;h2 id=&#34;增删查改&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#增删查改&#34;&gt;#&lt;/a&gt; 增删查改&lt;/h2&gt;
&lt;p&gt;今天学会了在微信开发中如何对数据库进行增删改查，和进行页面之间的跳转，还有数据之间的传递。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;wx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cloud&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;database&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;collection&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;goods&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
            &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;add&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
                &lt;span class=&#34;token literal-property property&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
                    &lt;span class=&#34;token literal-property property&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;goodname&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
                    &lt;span class=&#34;token literal-property property&#34;&gt;price&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;price
                &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt; 
            &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;id传递&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#id传递&#34;&gt;#&lt;/a&gt; ID 传递&lt;/h2&gt;
&lt;p&gt;data-id 与后面获取的变量名 id 相对应&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-markup&#34; data-language=&#34;markup&#34;&gt;&lt;code class=&#34;language-markup&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;&lt;/span&gt;view&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;bindtap&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#39;&lt;/span&gt;goDetail&lt;span class=&#34;token punctuation&#34;&gt;&#39;&lt;/span&gt;&lt;/span&gt; &lt;span class=&#34;token attr-name&#34;&gt;data-id&lt;/span&gt;&lt;span class=&#34;token attr-value&#34;&gt;&lt;span class=&#34;token punctuation attr-equals&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;{{item._id}}&lt;span class=&#34;token punctuation&#34;&gt;&#34;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;商品名：{{item.name}},价格：{{item.price}}&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token tag&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;lt;/&lt;/span&gt;view&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;

console.log(&#34;点击了跳转商品详情&#34;,event.currentTarget.dataset.id)&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;在 app.json 中的 pages 新增页面，页面的次序是有影响的&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;返回结果&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#返回结果&#34;&gt;#&lt;/a&gt; 返回结果&lt;/h2&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;wx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cloud&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;database&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;collection&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;goods&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;get&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;then&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;res&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;成功&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;res&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;catch&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;失败&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;err&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;br&gt;
&lt;h1 id=&#34;day2&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#day2&#34;&gt;#&lt;/a&gt; day2&lt;/h1&gt;
&lt;p&gt;通过封装方法，使用 this 进行调用，在使用&lt;strong&gt; this 时要注意所在的作用域&lt;/strong&gt;。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;&lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;getList&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;使用全局变量来传递值，可以使用 let，也可以使用 var 变量&lt;/p&gt;
&lt;p&gt;可以在 updated 中的 status 中看出是否有更新成功，在对数据库进行操作时要注意权限问题&lt;/p&gt;
&lt;p&gt;使用 return 截断错误，方便调试&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;接受数字小心是字符串，可以通过是否变蓝看出，可以使用 parseInt (price) 来进行强制转换&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;可以使用变量接收数据库对象，来方便操作&lt;/p&gt;
&lt;p&gt;限制返回的数据条数 &lt;code&gt;.limit(3)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;跳过若干条数据，用于分页 &lt;code&gt;.skip(1)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;要注意套餐所给的量，小心写，不然用完就要开新的套餐。数据库的读写次数是有限制的&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;快捷键使用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#快捷键使用&#34;&gt;#&lt;/a&gt; 快捷键使用&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;快捷键&lt;/th&gt;
&lt;th&gt;作用&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Ctrl+B&lt;/td&gt;
&lt;td&gt;编译&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ctrl+z&lt;/td&gt;
&lt;td&gt;撤销操作&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ctrl+s&lt;/td&gt;
&lt;td&gt;保存&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;shift+Alt + 方向键&lt;/td&gt;
&lt;td&gt;向对应方向复制当前行&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ctrl+ALT+l&lt;/td&gt;
&lt;td&gt;格式化代码&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;shift+Alt+f&lt;/td&gt;
&lt;td&gt;全局搜索&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ctrl+f&lt;/td&gt;
&lt;td&gt;当前页面搜索&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ctrl+h&lt;/td&gt;
&lt;td&gt;查找并替换&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;绑定事件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#绑定事件&#34;&gt;#&lt;/a&gt; 绑定事件&lt;/h2&gt;
&lt;p&gt;前端界面绑定方法，bindtap 点击事件，bindinput 输入事件，然后在后端函数中获取值&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;// 前端页面&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;input bindinput&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;getPrice&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;input&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;// 后端页面&lt;/span&gt;
&lt;span class=&#34;token function&#34;&gt;getPrice&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;event&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
        price &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; event&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;detail&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;value
    &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;弹窗提示确认是否删除&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#弹窗提示确认是否删除&#34;&gt;#&lt;/a&gt; 弹窗提示确认是否删除&lt;/h2&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;wx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;showModal&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
          &lt;span class=&#34;token literal-property property&#34;&gt;cancelColor&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;cancelColor&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
          &lt;span class=&#34;token literal-property property&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;是否确定删除&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
          &lt;span class=&#34;token literal-property property&#34;&gt;content&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;您再仔细想一想，是否真的要删除，删除后不可恢复&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
          &lt;span class=&#34;token function&#34;&gt;success&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;res&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
              &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;res&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;confirm&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;//用户点击了确认&lt;/span&gt;
                console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;点击确定&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;res&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
              &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;res&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cancel&lt;span class=&#34;token operator&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;token boolean&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;token comment&#34;&gt;//用户点击了取消&lt;/span&gt;
                console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;点击取消&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;res&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
              &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
          &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
        &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;页面跳转&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#页面跳转&#34;&gt;#&lt;/a&gt; 页面跳转&lt;/h2&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;wx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;navigateTo&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
              &lt;span class=&#34;token literal-property property&#34;&gt;url&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;/pages/demo1/demo1&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
            &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;升序排列&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#升序排列&#34;&gt;#&lt;/a&gt; 升序排列&lt;/h2&gt;
&lt;p&gt;asc 表示升序，desc 为降序，前面是关键字&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;.orderBy(&#34;price&#34;,&#39;asc&#39;)&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;command命令筛选&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#command命令筛选&#34;&gt;#&lt;/a&gt; command 命令筛选&lt;/h2&gt;
&lt;p&gt;可以在微信开放文档&lt;a href=&#34;https://&#34;&gt; https://developers.weixin.qq.com/miniprogram/dev/wxcloud/reference-sdk-api/database/Command.html&lt;/a&gt; 中查看具体，常见的有 gt 大于，lt 小于，gte 大于等于&lt;/p&gt;
&lt;p&gt;还可以使用 and 关键字设置多个查找条件，要注意格式 and ([]),[] 中用 {} 包裹筛选条件&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;where&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;token literal-property property&#34;&gt;price&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;db&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;command&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;gt&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    
&lt;span class=&#34;token comment&#34;&gt;// 组合查找&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;where&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;_&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;and&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;token literal-property property&#34;&gt;price&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; _&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;gt&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;//大于10&lt;/span&gt;
        &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;token literal-property property&#34;&gt;price&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; _&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;lt&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;//小于20&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;云函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#云函数&#34;&gt;#&lt;/a&gt; 云函数&lt;/h2&gt;
&lt;h3 id=&#34;初始化云函数&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#初始化云函数&#34;&gt;#&lt;/a&gt; 初始化云函数&lt;/h3&gt;
&lt;p&gt;新增的文件夹一定要与 pages 平级，可以先点击与 pages 平级的文件，再点击新增文件夹，命名为 cloud，或者在云函数列表中右键新增 node.js 云函数&lt;/p&gt;
&lt;p&gt;在 project.config.json 文件顶部配置云函数所在目录为 cloud，可以根据喜欢换名字，只要能对应起来就可以&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;&lt;span class=&#34;token string-property property&#34;&gt;&#34;cloudfunctionRoot&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;/cloud&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;保存成功，此时 cloud 文件夹会出现云朵标志，代表初始化成功&lt;/p&gt;
&lt;h3 id=&#34;注意事项&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#注意事项&#34;&gt;#&lt;/a&gt; 注意事项&lt;/h3&gt;
&lt;p&gt;要注意云函数的环境要和小程序的环境对应&lt;/p&gt;
&lt;p&gt;文件夹右键选择新建 node.js 文件&lt;/p&gt;
&lt;h3 id=&#34;云函数的调用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#云函数的调用&#34;&gt;#&lt;/a&gt; 云函数的调用&lt;/h3&gt;
&lt;p&gt;使用 callFunction, 在 name 处填写需要调用的云函数名称&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;&lt;span class=&#34;token comment&#34;&gt;//云函数的调用&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;//传统写法&lt;/span&gt;
wx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cloud&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;callFunction&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token literal-property property&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;getData&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token function&#34;&gt;success&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;res&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
        console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;请求云函数成功&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;res&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token function&#34;&gt;fail&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
        console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;请求云函数失败&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;res&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;// 建议写法&lt;/span&gt;
wx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cloud&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;callFunction&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token literal-property property&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;getData&#39;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;then&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;res&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;成功&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; res&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;setData&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
      &lt;span class=&#34;token comment&#34;&gt;// 传递值&lt;/span&gt;
        &lt;span class=&#34;token literal-property property&#34;&gt;openid&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; res&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;result&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;openid
    &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;catch&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;失败&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; err&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;云函数获取数据&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#云函数获取数据&#34;&gt;#&lt;/a&gt; 云函数获取数据&lt;/h3&gt;
&lt;p&gt;云函数只要有变动，就要重新部署，否则云函数不生效&lt;/p&gt;
&lt;p&gt;部署选择上传并部署：云端安装依赖 (不上传 node_modules)&lt;/p&gt;
&lt;p&gt;如果只改变了 js 文件，可点击对应的 js 文件，右键选择云函数增量上传：更新文件&lt;/p&gt;
&lt;p&gt;而且在云函数中操作数据库时，不再需要写 wx，wx 只在本地编写的时候才需要写&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;有多个云开发环境的时候，需要指定环境，或者使用 DYNAMIC_CURRENT_ENV 指定为当前环境（提倡写法）&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;cloud&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;init&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;env&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; cloud&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token constant&#34;&gt;DYNAMIC_CURRENT_ENV&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h1 id=&#34;day3&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#day3&#34;&gt;#&lt;/a&gt; day3&lt;/h1&gt;
&lt;p&gt;文件可以导出为 json 格式，可以使用记事本进行打开&lt;/p&gt;
&lt;p&gt;导入的时候可以选择 insert 和 upsert 模式，使用 insert 时注意不要有多个 id 相同的情况出现，否则会报错。建议使用 upsert 模式。&lt;/p&gt;
&lt;p&gt;云函数一次最多可返回 100 条数据，本地一次最多可返回 20 条数据。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;云函数中 console 在云端打印，我们在调试器中只能看到本地的 console。&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;向云函数传递值&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#向云函数传递值&#34;&gt;#&lt;/a&gt; 向云函数传递值&lt;/h2&gt;
&lt;p&gt;在 data 中传递值，在云函数中使用 event 接收对应的值&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;wx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cloud&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;callFunction&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    name &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;update0129&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
    &lt;span class=&#34;token literal-property property&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;token literal-property property&#34;&gt;id&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;id&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;token literal-property property&#34;&gt;price&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;20&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token comment&#34;&gt;// 云函数&lt;/span&gt;
event&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;id和event&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;price&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;hr&gt;
&lt;h1 id=&#34;day4&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#day4&#34;&gt;#&lt;/a&gt; day4&lt;/h1&gt;
&lt;p&gt;在编写云函数时，要注意先保存再上传到云端。&lt;/p&gt;
&lt;p&gt;创建云函数不难，相当于把本地的代码移到云函数，去掉 wx&lt;/p&gt;
&lt;p&gt;可以导入源码，但是如果使用别人的源码需要改开发者 ID&lt;/p&gt;
&lt;h2 id=&#34;选择文件接口&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#选择文件接口&#34;&gt;#&lt;/a&gt; 选择文件接口&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;用户选择文件接口（api)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://&#34;&gt;https://developers.weixin.qq.com/miniprogram/dev/api/media/image/wx.chooseMedia.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;也可以选择 chooseImage 接口&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;&lt;span class=&#34;token function&#34;&gt;chooseImg&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;token comment&#34;&gt;//上传图片的第一步&lt;/span&gt;
    wx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;chooseImage&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;token literal-property property&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;//可以选择多少张图片&lt;/span&gt;
        &lt;span class=&#34;token literal-property property&#34;&gt;sizeType&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;original&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;compressed&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;token literal-property property&#34;&gt;sourceType&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;album&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;camera&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;//设置图片来源&lt;/span&gt;
        &lt;span class=&#34;token function-variable function&#34;&gt;success&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;res&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;token keyword&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;uploadImg&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;res&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;tempFilePaths&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;文件上传&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#文件上传&#34;&gt;#&lt;/a&gt; 文件上传&lt;/h2&gt;
&lt;p&gt;然后就可以对获取到的文件进行上传&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://&#34;&gt;https://developers.weixin.qq.com/miniprogram/dev/wxcloud/reference-sdk-api/storage/uploadFile/client.uploadFile.html&lt;/a&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;&lt;span class=&#34;token function&#34;&gt;uploadImg&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;temfile&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;要上传图片的临时路径&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;temfile&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
    wx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cloud&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;uploadFile&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;token literal-property property&#34;&gt;cloudPath&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;西芹1.png&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;token literal-property property&#34;&gt;filePath&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; temfile&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token comment&#34;&gt;// 文件路径&lt;/span&gt;
        &lt;span class=&#34;token function-variable function&#34;&gt;success&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token parameter&#34;&gt;res&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
          console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;上传成功&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;res&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
        &lt;span class=&#34;token function-variable function&#34;&gt;fail&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token parameter&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
          console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;上传失败&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;err&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
      &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;点击预览即可在手机上体验使用小程序上传图片&lt;/p&gt;
&lt;h1 id=&#34;day5&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#day5&#34;&gt;#&lt;/a&gt; day5&lt;/h1&gt;
&lt;p&gt;存储图片路径，使用存储中的下载地址，复制的时候注意不要复制问号后面的东西，因为是时间戳，可能导致图片失效。&lt;/p&gt;
&lt;h2 id=&#34;上传视频&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#上传视频&#34;&gt;#&lt;/a&gt; 上传视频&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://&#34;&gt;https://developers.weixin.qq.com/miniprogram/dev/api/media/video/wx.chooseVideo.html&lt;/a&gt;&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;wx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;chooseVideo&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;sourceType&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;album&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;camera&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;maxDuration&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;60&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;camera&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;back&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt;
  &lt;span class=&#34;token function&#34;&gt;success&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;res&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;res&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;tempFilePath&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
  &lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;上传视频有时候比较慢，需要耐心等待。&lt;/p&gt;
&lt;p&gt;通过 type 值判断是上传视频还是图片&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;image wx&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;{{showImg}}&#34;&lt;/span&gt; src&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;{{imgUrl}}&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;image&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;video wx&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;token keyword&#34;&gt;if&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;{{showVideo}}&#34;&lt;/span&gt; src&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;{{videoUrl}}&#34;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;video&lt;span class=&#34;token operator&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;上传word和pdf文件&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#上传word和pdf文件&#34;&gt;#&lt;/a&gt; 上传 Word 和 PDF 文件&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://&#34;&gt;https://developers.weixin.qq.com/miniprogram/dev/api/media/image/wx.chooseMessageFile.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;从客户端会话选择文件。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;wx.chooseMessageFile({
  count: 10,
  type: &#39;image&#39;,
  success (res) {
    // tempFilePath可以作为img标签的src属性显示图片
    const tempFilePaths = res.tempFiles
  }
})&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;文件下载&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#文件下载&#34;&gt;#&lt;/a&gt; 文件下载&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://&#34;&gt;https://developers.weixin.qq.com/miniprogram/dev/wxcloud/reference-sdk-api/storage/downloadFile/client.downloadFile.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;从云存储空间下载文件&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-javascript&#34; data-language=&#34;javascript&#34;&gt;&lt;code class=&#34;language-javascript&#34;&gt;wx&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;cloud&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;downloadFile&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;token literal-property property&#34;&gt;fileID&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;a7xzcb&#39;&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;then&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;res&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;下载成功&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;catch&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token parameter&#34;&gt;error&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;{&lt;/span&gt;
    console&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;log&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#39;下载失败&#39;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;token punctuation&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;h1 id=&#34;day6&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#day6&#34;&gt;#&lt;/a&gt; day6&lt;/h1&gt;
&lt;p&gt;vue 文件中，data 初始化需要使用的数据，生命周期函数写在 methods 外面，而自定义的函数写在 methods 内。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;传递值不需要 setdata，只需要 this. 变量名 = 值即可。&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;目录结构&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#目录结构&#34;&gt;#&lt;/a&gt; 目录结构&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;目录名&lt;/th&gt;
&lt;th&gt;作用&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;pages&lt;/td&gt;
&lt;td&gt;页面存放目录&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;static&lt;/td&gt;
&lt;td&gt;静态文件目录&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;APP.vue&lt;/td&gt;
&lt;td&gt;应用入口文件，和小程序 app.js 类似&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;main.js&lt;/td&gt;
&lt;td&gt;应用入口文件，注册 vue 等&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;manifest.json&lt;/td&gt;
&lt;td&gt;项目配置&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;pages.json&lt;/td&gt;
&lt;td&gt;页面配置&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;common&lt;/td&gt;
&lt;td&gt;存放共用的文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;components&lt;/td&gt;
&lt;td&gt;自定义组件目录&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;store&lt;/td&gt;
&lt;td&gt;vuex 目录&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;unpackage&lt;/td&gt;
&lt;td&gt;编译后的文件目录&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;前端控制语句&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#前端控制语句&#34;&gt;#&lt;/a&gt; 前端控制语句&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;函数&lt;/th&gt;
&lt;th&gt;作用&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;v-bind&lt;/td&gt;
&lt;td&gt;可以简写为：，组件属性要使用 data 中定义的数据变量，或者组件属性使用表达式，要使用 v-bind 指定&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v-on&lt;/td&gt;
&lt;td&gt;可以简写为 @绑定事件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v-model&lt;/td&gt;
&lt;td&gt;数据双向绑定，例如根据输入值动态改变 data 中的值&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v-if&lt;/td&gt;
&lt;td&gt;条件判断，决定某个内容或者区块是否挂载&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v-show&lt;/td&gt;
&lt;td&gt;条件判断，是否显示&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;v-for&lt;/td&gt;
&lt;td&gt;列表渲染，遍历循环，可以使用 index 获取序号，可以使用 value 和 key 获取对象中的对应关系&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;onclick 事件也能够通过写表达式改变值，.stop 可以阻止事件穿透&lt;/p&gt;
&lt;h2 id=&#34;生命周期&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#生命周期&#34;&gt;#&lt;/a&gt; 生命周期&lt;/h2&gt;
&lt;h3 id=&#34;应用的生命周期appvue&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#应用的生命周期appvue&#34;&gt;#&lt;/a&gt; 应用的生命周期（APP.vue)&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;周期名&lt;/th&gt;
&lt;th&gt;意义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;onLaunch&lt;/td&gt;
&lt;td&gt;应用初始化完成执行，全局只执行一次，通常做登录的处理&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;onShow&lt;/td&gt;
&lt;td&gt;应用显示时执行，或者从后台进入前台&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;onHide&lt;/td&gt;
&lt;td&gt;应用隐藏时执行，或者从前台进入后台&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;页面的生命周期&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#页面的生命周期&#34;&gt;#&lt;/a&gt; 页面的生命周期&lt;/h3&gt;
&lt;p&gt;onReady 在 onShow 之后触发，因为要等待数据&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;周期名&lt;/th&gt;
&lt;th&gt;意义&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;onLoad&lt;/td&gt;
&lt;td&gt;页面加载时触发&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;onReady&lt;/td&gt;
&lt;td&gt;页面初次完成渲染时触发&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;onShow&lt;/td&gt;
&lt;td&gt;页面显示时触发&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;onUnload&lt;/td&gt;
&lt;td&gt;页面卸载时触发&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;onHide&lt;/td&gt;
&lt;td&gt;页面隐藏时触发&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;在写完云函数之后，一定要先停止在模拟器上运行，在编译一次才可以的，然后上传到云端，就可以进行使用了&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;v-model 真的是神器，省去了很多获取值的麻烦操作&lt;/strong&gt;&lt;/p&gt;
</content>
        <category term="云开发" />
        <category term="微信小程序" />
        <updated>2023-10-12T10:49:32.914Z</updated>
    </entry>
    <entry>
        <id>https://xiqin-huang.github.io/2023/10/12/bian-cheng/shang-huo-gu-git/</id>
        <title>尚硅谷Git</title>
        <link rel="alternate" href="https://xiqin-huang.github.io/2023/10/12/bian-cheng/shang-huo-gu-git/"/>
        <content type="html">&lt;h1 id=&#34;git使用&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#git使用&#34;&gt;#&lt;/a&gt; Git 使用&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;C:\\Users\\86136\\git.config&lt;/code&gt;  是 Git 的配置文件。&lt;/p&gt;
&lt;p&gt;按住 ctrl 键，滑动鼠标中键可以放大和缩小字体大小。&lt;/p&gt;
&lt;p&gt;使用 init 命令创建库成功后，会在该文件夹下创建一个.git 文件夹，默认是隐藏的，可以通过显示隐藏项目进行查看。&lt;/p&gt;
&lt;p&gt;红色代表该文件只存在于工作区，绿色代表文件已经上传到暂存区。&lt;/p&gt;
&lt;p&gt;只有将暂存区的文件提交到本地库，才会形成本地的历史记录。&lt;/p&gt;
&lt;p&gt;git 是以行的作为维护的，所以在原来的行上修改，会先删除改行，然后重新写入修改后的行。&lt;/p&gt;
&lt;p&gt;在.git 文件夹下的 refs 的 heads 目录的 main 文件可以查看当前版本号。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;合并分支时，两个分支在同一个文件的同一个位置上有两套完全不同的修改，Git 无法替我们决定使用哪一个，必须人为决定新代码内容。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;首先使用 vim 命令对内容进行合并，然后将文件提交到暂存区，最后执行提交 (注意此时使用 git commit 命令时不能带文件名)。此时修改的只是当前分支，合并进来的分支的文件不会被修改。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;各个分支其实都是指向具体版本的指针，当前所在的分支其实是由 HEAD 指针决定的，所以创建分支的本质就是多创建一个指针。&lt;/p&gt;
&lt;p&gt;clone 操作会进行如下操作：1、拉取代码。2、初始化本地仓库。3、创建别名。&lt;/p&gt;
&lt;p&gt;fork 别人代码后进行修改完成后，可以通过点击 pull request 想对方发送请求。对方可以在 pull request 查看，如果可以的话点击 Merge pull request 进行合并。&lt;/p&gt;
&lt;h1 id=&#34;git常用命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#git常用命令&#34;&gt;#&lt;/a&gt; Git 常用命令&lt;/h1&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;命令名称&lt;/th&gt;
&lt;th&gt;作用&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;git config --global &lt;a href=&#34;http://user.name&#34;&gt;user.name&lt;/a&gt; 用户名&lt;/td&gt;
&lt;td&gt;设置用户签名&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;git config --global user.email 邮箱&lt;/td&gt;
&lt;td&gt;设置用户邮箱&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;git init&lt;/td&gt;
&lt;td&gt;初始化本地库&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;git status&lt;/td&gt;
&lt;td&gt;查看本地库状态&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;git add 文件名&lt;/td&gt;
&lt;td&gt;添加到暂存区&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;git commit -m “日志信息” 文件名&lt;/td&gt;
&lt;td&gt;提交到本地库&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;git reflog&lt;/td&gt;
&lt;td&gt;查看历史记录&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;git reset --hard 版本号&lt;/td&gt;
&lt;td&gt;版本穿梭，版本号为 reflog 命令的七位随机码&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;git add 文件名&lt;/td&gt;
&lt;td&gt;将文件加入到暂存区&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;git rm --cached 文件名&lt;/td&gt;
&lt;td&gt;删除暂存区中的文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;git commit -m “日志信息” 文件名&lt;/td&gt;
&lt;td&gt;将暂存区的文件提交到本地库中&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;git reflog&lt;/td&gt;
&lt;td&gt;查看版本信息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;git log&lt;/td&gt;
&lt;td&gt;查看详细版本信息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;git branch 分支名&lt;/td&gt;
&lt;td&gt;创建分支&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;git branch -v&lt;/td&gt;
&lt;td&gt;查看分支&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;git checkout ‘分支名’&lt;/td&gt;
&lt;td&gt;切换分支&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;git merge 分支名&lt;/td&gt;
&lt;td&gt;把指定的分组合并到当前分支上&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;git remote -v&lt;/td&gt;
&lt;td&gt;查看当前所有远程地址别名&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;git remote add 别名 远程地址&lt;/td&gt;
&lt;td&gt;起别名&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;git push 别名 分支&lt;/td&gt;
&lt;td&gt;推送本地分支上的内容到远程仓库&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;git clone 远程地址&lt;/td&gt;
&lt;td&gt;将远程仓库的内容克隆到本地&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;git pull 远程库地址别名 远程分支名&lt;/td&gt;
&lt;td&gt;将远程仓库对应分支最新内容拉下来后与当前本地分支直接合并&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h1 id=&#34;linux常用命令&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#linux常用命令&#34;&gt;#&lt;/a&gt; Linux 常用命令&lt;/h1&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;命令名称&lt;/th&gt;
&lt;th&gt;作用&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;ll&lt;/td&gt;
&lt;td&gt;显示当前目录下的文档详细信息，加上 - a 可以查看隐藏信息&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ls&lt;/td&gt;
&lt;td&gt;当前目录的文档名&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;yy&lt;/td&gt;
&lt;td&gt;复制当前行，需要退出编辑状态&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;p&lt;/td&gt;
&lt;td&gt;粘贴当前行，需要退出编辑状态&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;i 或 insert&lt;/td&gt;
&lt;td&gt;进入编辑状态&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;:wq!&lt;/td&gt;
&lt;td&gt;退出编辑状态&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cat 文件名&lt;/td&gt;
&lt;td&gt;查看对应文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;clear&lt;/td&gt;
&lt;td&gt;清除当前界面的命令行&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;使用 vim 命令创建新文件时，需要按 i 键或 insert 键进入编辑状态。退出编辑状态则是按 esc 键，然后输入 &lt;code&gt;:wq!&lt;/code&gt;  回车退出。&lt;/p&gt;
&lt;h1 id=&#34;git集成idea&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#git集成idea&#34;&gt;#&lt;/a&gt; Git 集成 IDEA&lt;/h1&gt;
&lt;p&gt;创建忽略规则文件 &lt;code&gt;xxx.ignore&lt;/code&gt; ，来屏蔽不需要的文件，因为这些文件与项目的实际功能无关，不参与服务器部署运行，把它们忽略掉能够屏蔽 IDE 工具之间的差异。配置文件后在.gitconfig 文件中设置引用该文件。&lt;/p&gt;
&lt;pre class=&#34;line-numbers language-none&#34;&gt;&lt;code class=&#34;language-none&#34;&gt;//git.ignore文件配置，写上需要忽略的文件后缀
# Compiled class file
*.class

# Log file
*.log

# BlueJ files
*.ctxt

# Mobile Tools for Java (J2ME)
.mtj.tmp/# Package Files #
*.jar
*.war
*.nar
*.ear
*.zip
*.tar.gz
*.rar

hs_err_pid*

.classpath
.project
.settings
target
.idea
*.iml
//.gitconfig文件
[core]
  excludesfile = git.ignore文件所在路径，记得将反斜线(/)改为斜线(\)&lt;span aria-hidden=&#34;true&#34; class=&#34;line-numbers-rows&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;idea 则是在设置的 Version Control 下的 Git，并设置路径为 Git 安装目录的 C:\Program Files\Git\bin\git.exe。&lt;/p&gt;
&lt;p&gt;设置完成后还需要完成初始化，在 VCS (Version Control Setting) 下选择 import into Version Control 下的 Create Git Repository 才算真正完成初始化，此时 Git 接管了该项目。&lt;/p&gt;
&lt;p&gt;蓝色的代表之前已经被追踪过，可以不用 add，直接 commit 到本地库。&lt;/p&gt;
&lt;p&gt;如果想要将本地代码库推送到远程库，一定要保证本地库的版本要比远程库的版本高。因此一共成熟的程序员在动手改本地代码之前，一定会先检查远程库和本地库代码的区别。&lt;/p&gt;
</content>
        <category term="java学习路线" />
        <category term="计算机基础" />
        <updated>2023-10-12T10:49:32.912Z</updated>
    </entry>
</feed>
